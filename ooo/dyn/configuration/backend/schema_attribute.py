# coding: utf-8
#
# Copyright 2022 :Barry-Thomas-Paul: Moss
#
# Licensed under the Apache License, Version 2.0 (the "License")
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http: // www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# Const Class
# this is a auto generated file generated by Cheetah
# Libre Office Version: 7.2
# Namespace: com.sun.star.configuration.backend
from enum import IntEnum
from typing import TYPE_CHECKING
from ooo.oenv import UNO_ENVIRONMENT, UNO_RUNTIME
_DYNAMIC = False
if (not TYPE_CHECKING) and UNO_RUNTIME and UNO_ENVIRONMENT:
    _DYNAMIC = True

if not TYPE_CHECKING and _DYNAMIC:
    from com.sun.star.configuration.backend import SchemaAttribute as SchemaAttribute
    if hasattr(SchemaAttribute, '_constants') and isinstance(SchemaAttribute._constants, dict):
        SchemaAttribute._constants['__ooo_ns__'] = 'com.sun.star.configuration.backend'
        SchemaAttribute._constants['__ooo_full_ns__'] = 'com.sun.star.configuration.backend.SchemaAttribute'
        SchemaAttribute._constants['__ooo_type_name__'] = 'const'
    def build_enum():
        global SchemaAttributeEnum
        ls = [f for f in dir(SchemaAttribute) if not callable(getattr(SchemaAttribute, f)) and not f.startswith('__')]
        _dict = {}
        for name in ls:
            _dict[name] = getattr(SchemaAttribute, name)
        SchemaAttributeEnum = IntEnum('SchemaAttributeEnum', _dict)
    build_enum()
else:
    from ....lo.configuration.backend.schema_attribute import SchemaAttribute as SchemaAttribute

    class SchemaAttributeEnum(IntEnum):
        """
        Enum of Const Class SchemaAttribute

        These values are used to specify the behavior of a node or property in the schema.
        
        **since**
        
            OOo 1.1.2
        """
        REQUIRED = SchemaAttribute.REQUIRED
        """
        indicates that a property value can't be null.
        """
        LOCALIZED = SchemaAttribute.LOCALIZED
        """
        indicates that the content of the node or the value of the property may depend on the locale.
        """
        EXTENSIBLE = SchemaAttribute.EXTENSIBLE
        """
        indicates that properties can be added to the node at runtime
        """
        MASK = SchemaAttribute.MASK
        """
        can be used to mask the schema attributes from merged attributes
        """

__all__ = ['SchemaAttribute', 'SchemaAttributeEnum']
