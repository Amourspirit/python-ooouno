# coding: utf-8
#
# Copyright 2022 :Barry-Thomas-Paul: Moss
#
# Licensed under the Apache License, Version 2.0 (the "License")
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http: // www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# Enum Class
# this is a auto generated file generated by Cheetah
# Namespace: com.sun.star.media
# Libre Office Version: 7.2
from typing import TYPE_CHECKING
from enum import Enum
from ooo_uno.oenv import UNO_ENVIRONMENT, UNO_RUNTIME
_DYNAMIC = False
if (not TYPE_CHECKING) and UNO_RUNTIME and UNO_ENVIRONMENT:
    _DYNAMIC = True
    from ooo_uno.helper.enum_helper import uno_enum_class_new
    from com.sun.star.media.ZoomLevel import (FIT_TO_WINDOW, FIT_TO_WINDOW_FIXED_ASPECT, FULLSCREEN, NOT_AVAILABLE, ORIGINAL, ZOOM_1_TO_2, ZOOM_1_TO_4, ZOOM_2_TO_1, ZOOM_4_TO_1)

if TYPE_CHECKING or _DYNAMIC is False:


    class ZoomLevel(Enum):
        """
        Enum Class

        ENUM ZoomLevel

        See Also:
            `API ZoomLevel <https://api.libreoffice.org/docs/idl/ref/namespacecom_1_1sun_1_1star_1_1media.html#aa2569917c2883c1d1c0c0ee02e671ac6>`_
        """
        FIT_TO_WINDOW = 'FIT_TO_WINDOW'
        """
        specifies that the video should be zoomed to window size
        """
        FIT_TO_WINDOW_FIXED_ASPECT = 'FIT_TO_WINDOW_FIXED_ASPECT'
        """
        specifies that the video should be zoomed to window size with using a fixed aspect ratio
        """
        FULLSCREEN = 'FULLSCREEN'
        """
        specifies that the video should be displayed in fullscreen mode, if available
        """
        NOT_AVAILABLE = 'NOT_AVAILABLE'
        """
        specifies that the video window itself is not available at all, e.g.
        
        in cases of pure audio playback
        """
        ORIGINAL = 'ORIGINAL'
        """
        specifies that the video should be displayed with its original size
        """
        ZOOM_1_TO_2 = 'ZOOM_1_TO_2'
        """
        specifies that the video should be zoomed to a factor of 1:2
        """
        ZOOM_1_TO_4 = 'ZOOM_1_TO_4'
        """
        specifies that the video should be zoomed to a factor of 1:4
        """
        ZOOM_2_TO_1 = 'ZOOM_2_TO_1'
        """
        specifies that the video should be zoomed to a factor of 2:1
        """
        ZOOM_4_TO_1 = 'ZOOM_4_TO_1'
        """
        specifies that the video should be zoomed to a factor of 4:1
        """

if not TYPE_CHECKING and _DYNAMIC:
    def _dynamic_enum():
        # Dynamically create class that actually contains UNO enum instances
        global ZoomLevel
        _dict = {
            "FIT_TO_WINDOW": FIT_TO_WINDOW,
            "FIT_TO_WINDOW_FIXED_ASPECT": FIT_TO_WINDOW_FIXED_ASPECT,
            "FULLSCREEN": FULLSCREEN,
            "NOT_AVAILABLE": NOT_AVAILABLE,
            "ORIGINAL": ORIGINAL,
            "ZOOM_1_TO_2": ZOOM_1_TO_2,
            "ZOOM_1_TO_4": ZOOM_1_TO_4,
            "ZOOM_2_TO_1": ZOOM_2_TO_1,
            "ZOOM_4_TO_1": ZOOM_4_TO_1,
        }

        ZoomLevel = type('ZoomLevel', (object,), {
            '__doc__': 'class created dynamically. Class loosly mimics Enum',
            "__new__": uno_enum_class_new
        })
        for k, v in _dict.items():
            setattr(ZoomLevel, k, v)

    _dynamic_enum()

__all__ = ['ZoomLevel']

