# coding: utf-8
#
# Copyright 2022 :Barry-Thomas-Paul: Moss
#
# Licensed under the Apache License, Version 2.0 (the "License")
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http: // www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# Enum Class
# this is a auto generated file generated by Cheetah
# Namespace: com.sun.star.security
# Libre Office Version: 7.2
from typing import TYPE_CHECKING
from enum import Enum
from ooo.oenv import UNO_ENVIRONMENT, UNO_RUNTIME
_DYNAMIC = False
if (not TYPE_CHECKING) and UNO_RUNTIME and UNO_ENVIRONMENT:
    _DYNAMIC = True

if not TYPE_CHECKING and _DYNAMIC:
    from ooo.helper.enum_helper import uno_enum_class_new
    from com.sun.star.security.ExtAltNameType import (DIRECTORY_NAME, DNS_NAME, EDI_PARTY_NAME, IP_ADDRESS, OTHER_NAME, REGISTERED_ID, RFC822_NAME, URL, X400_ADDRESS)

    def _get_enum():
        # Dynamically create class that actually contains UNO enum instances
        _dict = {
            "__doc__": "Dynamically created class that represents com.sun.star.security.ExtAltNameType Enum. Class loosly mimics Enum",
            "__new__": uno_enum_class_new,
            "__ooo_ns__": "com.sun.star.security",
            "__ooo_full_ns__": "com.sun.star.security.ExtAltNameType",
            "__ooo_type_name__": "enum",
            "DIRECTORY_NAME": DIRECTORY_NAME,
            "DNS_NAME": DNS_NAME,
            "EDI_PARTY_NAME": EDI_PARTY_NAME,
            "IP_ADDRESS": IP_ADDRESS,
            "OTHER_NAME": OTHER_NAME,
            "REGISTERED_ID": REGISTERED_ID,
            "RFC822_NAME": RFC822_NAME,
            "URL": URL,
            "X400_ADDRESS": X400_ADDRESS,
        }
        result = type('ExtAltNameType', (object,), _dict)
        return result

    ExtAltNameType = _get_enum()
else:
    from ...lo.security.ext_alt_name_type import ExtAltNameType as ExtAltNameType

__all__ = ['ExtAltNameType']

