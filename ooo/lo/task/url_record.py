# coding: utf-8
#
# Copyright 2023-2024 :Barry-Thomas-Paul: Moss
#
# Licensed under the Apache License, Version 2.0 (the "License")
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http: // www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# Struct Class
# this is a auto generated file generated by Cheetah
# Namespace: com.sun.star.task
# Libre Office Version: 2024.2
from ooo.oenv.env_const import UNO_NONE
import typing
from .user_record import UserRecord as UserRecord_9a2e0ab9


class UrlRecord(object):
    """
    Struct Class


    See Also:
        `API UrlRecord <https://api.libreoffice.org/docs/idl/ref/structcom_1_1sun_1_1star_1_1task_1_1UrlRecord.html>`_
    """
    __ooo_ns__: str = 'com.sun.star.task'
    __ooo_full_ns__: str = 'com.sun.star.task.UrlRecord'
    __ooo_type_name__: str = 'struct'
    typeName: str = 'com.sun.star.task.UrlRecord'
    """Literal Constant ``com.sun.star.task.UrlRecord``"""

    def __init__(self, Url: typing.Optional[str] = '', UserList: typing.Optional[typing.Tuple[UserRecord_9a2e0ab9, ...]] = ()) -> None:
        """
        Constructor

        Arguments:
            Url (str, optional): Url value.
            UserList (typing.Tuple[UserRecord, ...], optional): UserList value.
        """
        super().__init__()

        if isinstance(Url, UrlRecord):
            oth: UrlRecord = Url
            self.Url = oth.Url
            self.UserList = oth.UserList
            return

        kargs = {
            "Url": Url,
            "UserList": UserList,
        }
        self._init(**kargs)

    def _init(self, **kwargs) -> None:
        self._url = kwargs["Url"]
        self._user_list = kwargs["UserList"]


    @property
    def Url(self) -> str:
        """
        The URL for which these passwords where given.
        """
        return self._url

    @Url.setter
    def Url(self, value: str) -> None:
        self._url = value

    @property
    def UserList(self) -> typing.Tuple[UserRecord_9a2e0ab9, ...]:
        return self._user_list

    @UserList.setter
    def UserList(self, value: typing.Tuple[UserRecord_9a2e0ab9, ...]) -> None:
        self._user_list = value


__all__ = ['UrlRecord']
