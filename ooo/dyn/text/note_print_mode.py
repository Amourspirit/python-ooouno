# coding: utf-8
#
# Copyright 2023 :Barry-Thomas-Paul: Moss
#
# Licensed under the Apache License, Version 2.0 (the "License")
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http: // www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# Enum Class
# this is a auto generated file generated by Cheetah
# Namespace: com.sun.star.text
# Libre Office Version: 7.4
from __future__ import annotations
import uno
from typing import Any, cast, TYPE_CHECKING


if TYPE_CHECKING:

    from com.sun.star.text.NotePrintMode import DOC_END as NOTE_PRINT_MODE_DOC_END
    from com.sun.star.text.NotePrintMode import NOT as NOTE_PRINT_MODE_NOT
    from com.sun.star.text.NotePrintMode import ONLY as NOTE_PRINT_MODE_ONLY
    from com.sun.star.text.NotePrintMode import PAGE_END as NOTE_PRINT_MODE_PAGE_END

    class NotePrintMode(uno.Enum):
        """
        Enum Class


        See Also:
            `API NotePrintMode <https://api.libreoffice.org/docs/idl/ref/namespacecom_1_1sun_1_1star_1_1text.html#a95d9f731f1389ee9f277e756b476251c>`_
        """

        def __init__(self, value: Any) -> None:
            super().__init__('com.sun.star.text.NotePrintMode', value)

        __ooo_ns__: str = 'com.sun.star.text'
        __ooo_full_ns__: str = 'com.sun.star.text.NotePrintMode'
        __ooo_type_name__: str = 'enum'

        DOC_END = cast("NotePrintMode", NOTE_PRINT_MODE_DOC_END)
        """
        Notes are collected at the end of the document.
        """
        NOT = cast("NotePrintMode", NOTE_PRINT_MODE_NOT)
        """
        Notes are not printed.
        """
        ONLY = cast("NotePrintMode", NOTE_PRINT_MODE_ONLY)
        """
        Only notes are printed.
        """
        PAGE_END = cast("NotePrintMode", NOTE_PRINT_MODE_PAGE_END)
        """
        Notes are collected at the end of a page and printed on an inserted page.
        """

else:

    from ooo.helper.enum_helper import UnoEnumMeta
    class NotePrintMode(metaclass=UnoEnumMeta, type_name="com.sun.star.text.NotePrintMode", name_space="com.sun.star.text"):
        """Dynamically created class that represents ``com.sun.star.text.NotePrintMode`` Enum. Class loosely mimics Enum"""
        pass

__all__ = ['NotePrintMode']
