# coding: utf-8
#
# Copyright 2022 :Barry-Thomas-Paul: Moss
#
# Licensed under the Apache License, Version 2.0 (the "License")
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http: // www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# Enum Class
# this is a auto generated file generated by Cheetah
# Namespace: com.sun.star.uno
# Libre Office Version: 7.2
from typing import TYPE_CHECKING
from enum import Enum
from ooo.oenv import UNO_ENVIRONMENT, UNO_RUNTIME
_DYNAMIC = False
if (not TYPE_CHECKING) and UNO_RUNTIME and UNO_ENVIRONMENT:
    _DYNAMIC = True

if not TYPE_CHECKING and _DYNAMIC:
    from ooo.helper.enum_helper import uno_enum_class_new
    from com.sun.star.uno.TypeClass import (ANY, ARRAY, BOOLEAN, BYTE, CHAR, CONSTANT, CONSTANTS, DOUBLE, ENUM, EXCEPTION, FLOAT, HYPER, INTERFACE, INTERFACE_ATTRIBUTE, INTERFACE_METHOD, LONG, MODULE, PROPERTY, SEQUENCE, SERVICE, SHORT, SINGLETON, STRING, STRUCT, TYPE, TYPEDEF, UNION, UNKNOWN, UNSIGNED_HYPER, UNSIGNED_LONG, UNSIGNED_SHORT, VOID)

    def _dynamic_enum():
        # Dynamically create class that actually contains UNO enum instances
        global TypeClass
        _dict = {
            "ANY": ANY,
            "ARRAY": ARRAY,
            "BOOLEAN": BOOLEAN,
            "BYTE": BYTE,
            "CHAR": CHAR,
            "CONSTANT": CONSTANT,
            "CONSTANTS": CONSTANTS,
            "DOUBLE": DOUBLE,
            "ENUM": ENUM,
            "EXCEPTION": EXCEPTION,
            "FLOAT": FLOAT,
            "HYPER": HYPER,
            "INTERFACE": INTERFACE,
            "INTERFACE_ATTRIBUTE": INTERFACE_ATTRIBUTE,
            "INTERFACE_METHOD": INTERFACE_METHOD,
            "LONG": LONG,
            "MODULE": MODULE,
            "PROPERTY": PROPERTY,
            "SEQUENCE": SEQUENCE,
            "SERVICE": SERVICE,
            "SHORT": SHORT,
            "SINGLETON": SINGLETON,
            "STRING": STRING,
            "STRUCT": STRUCT,
            "TYPE": TYPE,
            "TYPEDEF": TYPEDEF,
            "UNION": UNION,
            "UNKNOWN": UNKNOWN,
            "UNSIGNED_HYPER": UNSIGNED_HYPER,
            "UNSIGNED_LONG": UNSIGNED_LONG,
            "UNSIGNED_SHORT": UNSIGNED_SHORT,
            "VOID": VOID,
        }

        TypeClass = type('TypeClass', (object,), {
            '__doc__': 'class created dynamically. Class loosly mimics Enum',
            "__new__": uno_enum_class_new
        })
        for k, v in _dict.items():
            setattr(TypeClass, k, v)
        setattr(TypeClass, ' __ooo_ns__', 'com.sun.star.uno')
        setattr(TypeClass, ' __ooo_full_ns__', 'com.sun.star.uno.TypeClass')
        setattr(TypeClass, ' __ooo_type_name__', 'enum')
    _dynamic_enum()
else:
    from ...lo.uno.type_class import TypeClass as TypeClass

__all__ = ['TypeClass']

