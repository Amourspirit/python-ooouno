# coding: utf-8
#
# Copyright 2023 :Barry-Thomas-Paul: Moss
#
# Licensed under the Apache License, Version 2.0 (the "License")
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http: // www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# Interface Class
# this is a auto generated file generated by Cheetah
# Libre Office Version: 7.4
# Namespace: com.sun.star.util
import typing
from abc import abstractmethod
from ..uno.x_interface import XInterface as XInterface_8f010a43
if typing.TYPE_CHECKING:
    from ..lang.locale import Locale as Locale_70d308fa

class XNumberFormatTypes(XInterface_8f010a43):
    """
    represents functions to get specific, predefined number formats.

    See Also:
        `API XNumberFormatTypes <https://api.libreoffice.org/docs/idl/ref/interfacecom_1_1sun_1_1star_1_1util_1_1XNumberFormatTypes.html>`_
    """
    __ooo_ns__: str = 'com.sun.star.util'
    __ooo_full_ns__: str = 'com.sun.star.util.XNumberFormatTypes'
    __ooo_type_name__: str = 'interface'
    __pyunointerface__: str = 'com.sun.star.util.XNumberFormatTypes'

    @abstractmethod
    def getFormatForLocale(self, nKey: int, nLocale: 'Locale_70d308fa') -> int:
        """
        """
        ...
    @abstractmethod
    def getFormatIndex(self, nIndex: int, nLocale: 'Locale_70d308fa') -> int:
        """
        """
        ...
    @abstractmethod
    def getStandardFormat(self, nType: int, nLocale: 'Locale_70d308fa') -> int:
        """
        """
        ...
    @abstractmethod
    def getStandardIndex(self, nLocale: 'Locale_70d308fa') -> int:
        """
        """
        ...
    @abstractmethod
    def isTypeCompatible(self, nOldType: int, nNewType: int) -> bool:
        """
        verifies if one type of number format is compatible with another type.
        """
        ...

__all__ = ['XNumberFormatTypes']

