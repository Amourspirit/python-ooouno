# coding: utf-8
#
# Copyright 2022 :Barry-Thomas-Paul: Moss
#
# Licensed under the Apache License, Version 2.0 (the "License")
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http: // www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# Struct Class
# this is a auto generated file generated by Cheetah
# Namespace: com.sun.star.util
# Libre Office Version: 7.2
from typing import TYPE_CHECKING
from ooo.oenv import UNO_ENVIRONMENT, UNO_RUNTIME, UNO_NONE
_DYNAMIC = False
if (not TYPE_CHECKING) and UNO_RUNTIME and UNO_ENVIRONMENT:
    _DYNAMIC = True

if not TYPE_CHECKING and _DYNAMIC:
    def _dynamic_struct():
        import uno
        from com.sun.star.util import URL as UURL
        # Dynamically create uno com.sun.star.util.URL using uno
        global URL

        def _set_fn_attr(struct):
            type_name = 'com.sun.star.util.URL'
            struct.__dict__['typeName'] = type_name
            struct.__dict__['__pyunointerface__'] = type_name
            struct.__dict__['__pyunostruct__'] = type_name

        def _set_attr(struct):
            struct.__dict__['__ooo_ns__'] = 'com.sun.star.util'
            struct.__dict__['__ooo_full_ns__'] = 'com.sun.star.util.URL'
            struct.__dict__['__ooo_type_name__'] = 'struct'

        def _struct_init(Complete = UNO_NONE, Main = UNO_NONE, Protocol = UNO_NONE, User = UNO_NONE, Password = UNO_NONE, Server = UNO_NONE, Port = UNO_NONE, Path = UNO_NONE, Name = UNO_NONE, Arguments = UNO_NONE, Mark = UNO_NONE):
            ns = 'com.sun.star.util.URL'
            if isinstance(Complete, UURL):
                inst = uno.createUnoStruct(ns, Complete)
                _set_attr(inst)
                return inst
            struct = uno.createUnoStruct(ns)

            if not Complete is UNO_NONE:
                if getattr(struct, 'Complete') != Complete:
                    setattr(struct, 'Complete', Complete)
            if not Main is UNO_NONE:
                if getattr(struct, 'Main') != Main:
                    setattr(struct, 'Main', Main)
            if not Protocol is UNO_NONE:
                if getattr(struct, 'Protocol') != Protocol:
                    setattr(struct, 'Protocol', Protocol)
            if not User is UNO_NONE:
                if getattr(struct, 'User') != User:
                    setattr(struct, 'User', User)
            if not Password is UNO_NONE:
                if getattr(struct, 'Password') != Password:
                    setattr(struct, 'Password', Password)
            if not Server is UNO_NONE:
                if getattr(struct, 'Server') != Server:
                    setattr(struct, 'Server', Server)
            if not Port is UNO_NONE:
                if getattr(struct, 'Port') != Port:
                    setattr(struct, 'Port', Port)
            if not Path is UNO_NONE:
                if getattr(struct, 'Path') != Path:
                    setattr(struct, 'Path', Path)
            if not Name is UNO_NONE:
                if getattr(struct, 'Name') != Name:
                    setattr(struct, 'Name', Name)
            if not Arguments is UNO_NONE:
                if getattr(struct, 'Arguments') != Arguments:
                    setattr(struct, 'Arguments', Arguments)
            if not Mark is UNO_NONE:
                if getattr(struct, 'Mark') != Mark:
                    setattr(struct, 'Mark', Mark)
            _set_attr(struct)
            return struct
        _set_attr(_struct_init)
        _set_fn_attr(_struct_init)
        URL = _struct_init

    _dynamic_struct()
else:
    from ...lo.util.url import URL as URL

__all__ = ['URL']

