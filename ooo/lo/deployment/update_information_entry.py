# coding: utf-8
#
# Copyright 2022 :Barry-Thomas-Paul: Moss
#
# Licensed under the Apache License, Version 2.0 (the "License")
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http: // www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# Struct Class
# this is a auto generated file generated by Cheetah
# Namespace: com.sun.star.deployment
# Libre Office Version: 7.2
import typing
if typing.TYPE_CHECKING:
    from ..xml.dom.x_element import XElement as XElement_a33d0ae9


class UpdateInformationEntry(object):
    """
    Struct Class

    Objects of this type are used as elements of the enumeration returned by XUpdateInformationProvider.
    
    **since**
    
        OOo 2.3

    See Also:
        `API UpdateInformationEntry <https://api.libreoffice.org/docs/idl/ref/structcom_1_1sun_1_1star_1_1deployment_1_1UpdateInformationEntry.html>`_
    """
    __ooo_ns__: str = 'com.sun.star.deployment'
    __ooo_full_ns__: str = 'com.sun.star.deployment.UpdateInformationEntry'
    __ooo_type_name__: str = 'struct'
    typeName: str = 'com.sun.star.deployment.UpdateInformationEntry'
    """Literal Constant ``com.sun.star.deployment.UpdateInformationEntry``"""

    def __init__(self, *args, **kwargs):
        """
        Constructor

        Other Arguments:
            First positinal arg can be another ``UpdateInformationEntry`` instance,
                if it is the only argument passed to contructor;
                Otherwise, postitional arguments are treated as ``UpdateInformationEntry``
                values. Following the order of ``Keyword Arguments``.

        Keyword Arguments:
            UpdateDocument (XElement, optional): UpdateDocument value
            Description (str, optional): Description value
        """
        self._update_document = None
        self._description = None

        key_order = ('UpdateDocument', 'Description')
        arg_len = len(args)
        if arg_len == 1:
            if isinstance(args[0], UpdateInformationEntry):
                oth = args[0]
                for key in key_order:
                    setattr(self, key, getattr(oth, key))
                return

        if  arg_len > len(key_order):
            raise ValueError("UpdateInformationEntry.__init__() To many parameters")
        for i, arg in enumerate(args):
            setattr(self, key_order[i], arg)
        for k, v in kwargs.items():
            if k in key_order:
                setattr(self, k, v)


    @property
    def UpdateDocument(self) -> 'XElement_a33d0ae9':
        """
        the DOM representation of an update information entry
        """
        return self._update_document
    
    @UpdateDocument.setter
    def UpdateDocument(self, value: 'XElement_a33d0ae9') -> None:
        self._update_document = value

    @property
    def Description(self) -> str:
        """
        the (optional) description for an update information entry extracted from the update feed container
        """
        return self._description
    
    @Description.setter
    def Description(self, value: str) -> None:
        self._description = value


__all__ = ['UpdateInformationEntry']
