# coding: utf-8
#
# Copyright 2022 :Barry-Thomas-Paul: Moss
#
# Licensed under the Apache License, Version 2.0 (the "License")
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http: // www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# Struct Class
# this is a auto generated file generated by Cheetah
# Namespace: com.sun.star.inspection
# Libre Office Version: 7.2
from typing import TYPE_CHECKING
from ooo.oenv import UNO_ENVIRONMENT, UNO_RUNTIME, UNO_NONE
if (not TYPE_CHECKING) and UNO_RUNTIME and UNO_ENVIRONMENT:
    import uno
 
    def _get_class():
        orig_init = None
        def init(self, DisplayName = UNO_NONE, Control = UNO_NONE, HelpURL = UNO_NONE, HasPrimaryButton = UNO_NONE, PrimaryButtonId = UNO_NONE, PrimaryButtonImageURL = UNO_NONE, PrimaryButtonImage = UNO_NONE, HasSecondaryButton = UNO_NONE, SecondaryButtonId = UNO_NONE, SecondaryButtonImageURL = UNO_NONE, SecondaryButtonImage = UNO_NONE, IndentLevel = UNO_NONE, Category = UNO_NONE):
            if getattr(DisplayName, "__class__", None) == self.__class__:
                orig_init(self, DisplayName)
                return
            else:
                orig_init(self)
            if not DisplayName is UNO_NONE:
                if getattr(self, 'DisplayName') != DisplayName:
                    setattr(self, 'DisplayName', DisplayName)
            if not Control is UNO_NONE:
                if getattr(self, 'Control') != Control:
                    setattr(self, 'Control', Control)
            if not HelpURL is UNO_NONE:
                if getattr(self, 'HelpURL') != HelpURL:
                    setattr(self, 'HelpURL', HelpURL)
            if not HasPrimaryButton is UNO_NONE:
                if getattr(self, 'HasPrimaryButton') != HasPrimaryButton:
                    setattr(self, 'HasPrimaryButton', HasPrimaryButton)
            if not PrimaryButtonId is UNO_NONE:
                if getattr(self, 'PrimaryButtonId') != PrimaryButtonId:
                    setattr(self, 'PrimaryButtonId', PrimaryButtonId)
            if not PrimaryButtonImageURL is UNO_NONE:
                if getattr(self, 'PrimaryButtonImageURL') != PrimaryButtonImageURL:
                    setattr(self, 'PrimaryButtonImageURL', PrimaryButtonImageURL)
            if not PrimaryButtonImage is UNO_NONE:
                if getattr(self, 'PrimaryButtonImage') != PrimaryButtonImage:
                    setattr(self, 'PrimaryButtonImage', PrimaryButtonImage)
            if not HasSecondaryButton is UNO_NONE:
                if getattr(self, 'HasSecondaryButton') != HasSecondaryButton:
                    setattr(self, 'HasSecondaryButton', HasSecondaryButton)
            if not SecondaryButtonId is UNO_NONE:
                if getattr(self, 'SecondaryButtonId') != SecondaryButtonId:
                    setattr(self, 'SecondaryButtonId', SecondaryButtonId)
            if not SecondaryButtonImageURL is UNO_NONE:
                if getattr(self, 'SecondaryButtonImageURL') != SecondaryButtonImageURL:
                    setattr(self, 'SecondaryButtonImageURL', SecondaryButtonImageURL)
            if not SecondaryButtonImage is UNO_NONE:
                if getattr(self, 'SecondaryButtonImage') != SecondaryButtonImage:
                    setattr(self, 'SecondaryButtonImage', SecondaryButtonImage)
            if not IndentLevel is UNO_NONE:
                if getattr(self, 'IndentLevel') != IndentLevel:
                    setattr(self, 'IndentLevel', IndentLevel)
            if not Category is UNO_NONE:
                if getattr(self, 'Category') != Category:
                    setattr(self, 'Category', Category)

        type_name = 'com.sun.star.inspection.LineDescriptor'
        struct = uno.getClass(type_name)
        struct.__ooo_ns__ = 'com.sun.star.inspection'
        struct.__ooo_full_ns__= type_name
        struct.__ooo_type_name__ = 'struct'
        orig_init = struct.__init__
        struct.__init__ = init
        return struct

    LineDescriptor = _get_class()


else:
    from ...lo.inspection.line_descriptor import LineDescriptor as LineDescriptor

__all__ = ['LineDescriptor']

