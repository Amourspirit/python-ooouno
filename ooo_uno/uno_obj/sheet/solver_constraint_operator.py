# coding: utf-8
#
# Copyright 2022 :Barry-Thomas-Paul: Moss
#
# Licensed under the Apache License, Version 2.0 (the "License")
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http: // www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# Enum Class
# this is a auto generated file generated by Cheetah
# Namespace: com.sun.star.sheet
# Libre Office Version: 7.2
from typing import TYPE_CHECKING
from enum import Enum
from ooo_uno.oenv import UNO_ENVIRONMENT, UNO_RUNTIME
_DYNAMIC = False
if (not TYPE_CHECKING) and UNO_RUNTIME and UNO_ENVIRONMENT:
    _DYNAMIC = True
    from ooo_uno.helper.enum_helper import uno_enum_class_new
    from com.sun.star.sheet.SolverConstraintOperator import (BINARY, EQUAL, GREATER_EQUAL, INTEGER, LESS_EQUAL)

if TYPE_CHECKING or _DYNAMIC is False:


    class SolverConstraintOperator(Enum):
        """
        Enum Class

        

        See Also:
            `API SolverConstraintOperator <https://api.libreoffice.org/docs/idl/ref/namespacecom_1_1sun_1_1star_1_1sheet.html#a491ab8ed5b7b5809e7be869d26b071cf>`_
        """
        BINARY = 'BINARY'
        """
        The cell value is a binary value (0 or 1).
        """
        EQUAL = 'EQUAL'
        """
        value has to be equal to the specified value.
        
        The cell value is equal to the specified value.
        """
        GREATER_EQUAL = 'GREATER_EQUAL'
        """
        the value has to be greater than or equal to the specified value.
        
        The cell value is greater or equal to the specified value.
        
        value has to be greater than or equal to the specified value.
        """
        INTEGER = 'INTEGER'
        """
        The cell value is an integer value.
        """
        LESS_EQUAL = 'LESS_EQUAL'
        """
        the value has to be less than or equal to the specified value.
        
        The cell value is less or equal to the specified value.
        
        value has to be less than or equal to the specified value.
        """

if not TYPE_CHECKING and _DYNAMIC:
    def _dynamic_enum():
        # Dynamically create class that actually contains UNO enum instances
        global SolverConstraintOperator
        _dict = {
            "BINARY": BINARY,
            "EQUAL": EQUAL,
            "GREATER_EQUAL": GREATER_EQUAL,
            "INTEGER": INTEGER,
            "LESS_EQUAL": LESS_EQUAL,
        }

        SolverConstraintOperator = type('SolverConstraintOperator', (object,), {
            '__doc__': 'class created dynamically. Class loosly mimics Enum',
            "__new__": uno_enum_class_new
        })
        for k, v in _dict.items():
            setattr(SolverConstraintOperator, k, v)

    _dynamic_enum()

__all__ = ['SolverConstraintOperator']

