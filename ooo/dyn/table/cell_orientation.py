# coding: utf-8
#
# Copyright 2023 :Barry-Thomas-Paul: Moss
#
# Licensed under the Apache License, Version 2.0 (the "License")
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http: // www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# Enum Class
# this is a auto generated file generated by Cheetah
# Namespace: com.sun.star.table
# Libre Office Version: 7.4
from __future__ import annotations
import uno
from typing import Any, TYPE_CHECKING
from ooo.oenv.env_const import UNO_ENVIRONMENT, UNO_RUNTIME

_DYNAMIC = False
if (not TYPE_CHECKING) and UNO_RUNTIME and UNO_ENVIRONMENT:
    _DYNAMIC = True

if not TYPE_CHECKING and _DYNAMIC:
    # document generators will most likely not see this.
    from ooo.helper.enum_helper import UnoEnumMeta
    class CellOrientation(metaclass=UnoEnumMeta, type_name="com.sun.star.table.CellOrientation", name_space="com.sun.star.table"):
        """Dynamically created class that represents ``com.sun.star.table.CellOrientation`` Enum. Class loosely mimics Enum"""
        pass
else:
    if TYPE_CHECKING:
        from com.sun.star.table.CellOrientation import BOTTOMTOP as CELL_ORIENTATION_BOTTOMTOP
        from com.sun.star.table.CellOrientation import STACKED as CELL_ORIENTATION_STACKED
        from com.sun.star.table.CellOrientation import STANDARD as CELL_ORIENTATION_STANDARD
        from com.sun.star.table.CellOrientation import TOPBOTTOM as CELL_ORIENTATION_TOPBOTTOM

        class CellOrientation(uno.Enum):
            """
            Enum Class


            See Also:
                `API CellOrientation <https://api.libreoffice.org/docs/idl/ref/namespacecom_1_1sun_1_1star_1_1table.html#ae84a4c3547c7628fcc19bdf41cc93c60>`_
            """

            def __init__(self, value: Any) -> None:
                super().__init__('com.sun.star.table.CellOrientation', value)

            __ooo_ns__: str = 'com.sun.star.table'
            __ooo_full_ns__: str = 'com.sun.star.table.CellOrientation'
            __ooo_type_name__: str = 'enum'

            BOTTOMTOP = CELL_ORIENTATION_BOTTOMTOP
            """
            contents are printed from bottom to top.
            """
            STACKED = CELL_ORIENTATION_STACKED
            """
            contents are printed from top to bottom with individual characters in normal (horizontal) orientation.
            """
            STANDARD = CELL_ORIENTATION_STANDARD
            """
            default alignment is used (left for numbers, right for text).

            default alignment is used.

            contents are printed from left to right.
            """
            TOPBOTTOM = CELL_ORIENTATION_TOPBOTTOM
            """
            contents are printed from top to bottom.
            """
    else:
        # keep document generators happy
        from ...lo.table.cell_orientation import CellOrientation as CellOrientation


__all__ = ['CellOrientation']
