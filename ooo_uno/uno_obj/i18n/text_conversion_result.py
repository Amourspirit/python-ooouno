# coding: utf-8
#
# Copyright 2022 :Barry-Thomas-Paul: Moss
#
# Licensed under the Apache License, Version 2.0 (the "License")
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http: // www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# Struct Class
# this is a auto generated file generated by Cheetah
# Namespace: com.sun.star.i18n
# Libre Office Version: 7.2
import typing
if typing.TYPE_CHECKING:
    from .boundary import Boundary as Boundary_7fe2098c
from ooo_uno.oenv import UNO_ENVIRONMENT, UNO_RUNTIME
_DYNAMIC = False
if (not typing.TYPE_CHECKING) and UNO_RUNTIME and UNO_ENVIRONMENT:
    _DYNAMIC = True
    from ooo_uno.helper import uno_helper

if typing.TYPE_CHECKING or _DYNAMIC is False:


    class TextConversionResult(object):
        """
        Struct Class

        Text conversion result to be used with XTextConversion.
        
        **since**
        
            OOo 1.1.2

        See Also:
            `API TextConversionResult <https://api.libreoffice.org/docs/idl/ref/structcom_1_1sun_1_1star_1_1i18n_1_1TextConversionResult.html>`_


        Note:
            | At runtime TextConversionResult will be an actual uno struct however can seamlessly be treated as a regualr class.
            | At design time a class is presumed. This allows for better typings.
            | TextConversionResult is a callable and can be treatead as a class and create instances.
        """

        def __init__(self, Boundary: 'typing.Optional[Boundary_7fe2098c]' = None, Candidates: 'typing.Optional[typing.List[str]]' = None):
            self._boundary = Boundary
            self._candidates = Candidates

        @property
        def Boundary(self) -> 'Boundary_7fe2098c':
            """
            The boundary of the first convertible word in the given text.
            
            If there is no convertible word found in the text, startPos and endPos for Boundary equal 0.
            """
            return self._boundary
        
        @Boundary.setter
        def Boundary(self, value: 'Boundary_7fe2098c') -> None:
            self._boundary = value

        @property
        def Candidates(self) -> 'typing.List[str]':
            """
            A list of replacement candidates for the first convertible word found in the given text.
            """
            return self._candidates
        
        @Candidates.setter
        def Candidates(self, value: 'typing.List[str]') -> None:
            self._candidates = value

if not typing.TYPE_CHECKING and _DYNAMIC:
    def _dynamic_struct() -> None:
        # Dynamically create uno struct using uno
        global TextConversionResult
        order = ('Boundary', 'Candidates')

        def _struct_init(*args, **kwargs):
            struct = uno_helper.create_uno_struct('com.sun.star.i18n.TextConversionResult')
            for i, arg in enumerate(args):
                if arg is None:
                    continue
                setattr(struct, order[i], arg)
            for k, v in kwargs.items():
                setattr(struct, k, v)
            return struct
        TextConversionResult = _struct_init

    _dynamic_struct()

__all__ = ['TextConversionResult']
