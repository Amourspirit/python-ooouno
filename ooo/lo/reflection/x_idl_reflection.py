# coding: utf-8
#
# Copyright 2023 :Barry-Thomas-Paul: Moss
#
# Licensed under the Apache License, Version 2.0 (the "License")
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http: // www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# Interface Class
# this is a auto generated file generated by Cheetah
# Libre Office Version: 7.4
# Namespace: com.sun.star.reflection
from __future__ import annotations
import typing
from abc import abstractmethod
from ..uno.x_interface import XInterface as XInterface_8f010a43
if typing.TYPE_CHECKING:
    from .x_idl_class import XIdlClass as XIdlClass_d63a0c9a

class XIdlReflection(XInterface_8f010a43):
    """
    Interface to reflect types.

    See Also:
        `API XIdlReflection <https://api.libreoffice.org/docs/idl/ref/interfacecom_1_1sun_1_1star_1_1reflection_1_1XIdlReflection.html>`_
    """
    __ooo_ns__: str = 'com.sun.star.reflection'
    __ooo_full_ns__: str = 'com.sun.star.reflection.XIdlReflection'
    __ooo_type_name__: str = 'interface'
    __pyunointerface__: str = 'com.sun.star.reflection.XIdlReflection'

    @abstractmethod
    def forName(self, aTypeName: str) -> XIdlClass_d63a0c9a:
        """
        Obtaining a reflection interface for a type.
        
        You specify the type by its name. If the given type name can not be reflected, then a null-reference is returned.
        """
        ...
    @abstractmethod
    def getType(self, aObj: object) -> XIdlClass_d63a0c9a:
        """
        Obtaining a reflection interface for an object.
        
        This method takes the type of the object the any contains into account. If the any contains no object, then a null-reference is returned.
        """
        ...

__all__ = ['XIdlReflection']


