# coding: utf-8
#
# Copyright 2022 :Barry-Thomas-Paul: Moss
#
# Licensed under the Apache License, Version 2.0 (the "License")
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http: // www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# Struct Class
# this is a auto generated file generated by Cheetah
# Namespace: com.sun.star.linguistic2
# Libre Office Version: 7.2
from typing import TYPE_CHECKING
from ooo.oenv import UNO_ENVIRONMENT, UNO_RUNTIME, UNO_NONE
if (not TYPE_CHECKING) and UNO_RUNTIME and UNO_ENVIRONMENT:
    import uno
 
    def _get_class():
        orig_init = None
        def init(self, aErrors = UNO_NONE, aProperties = UNO_NONE, aDocumentIdentifier = UNO_NONE, xFlatParagraph = UNO_NONE, aText = UNO_NONE, aLocale = UNO_NONE, nStartOfSentencePosition = UNO_NONE, nBehindEndOfSentencePosition = UNO_NONE, nStartOfNextSentencePosition = UNO_NONE, xProofreader = UNO_NONE):
            if getattr(aErrors, "__class__", None) == self.__class__:
                orig_init(self, aErrors)
                return
            else:
                orig_init(self)
            if not aErrors is UNO_NONE:
                if getattr(self, 'aErrors') != aErrors:
                    setattr(self, 'aErrors', aErrors)
            if not aProperties is UNO_NONE:
                if getattr(self, 'aProperties') != aProperties:
                    setattr(self, 'aProperties', aProperties)
            if not aDocumentIdentifier is UNO_NONE:
                if getattr(self, 'aDocumentIdentifier') != aDocumentIdentifier:
                    setattr(self, 'aDocumentIdentifier', aDocumentIdentifier)
            if not xFlatParagraph is UNO_NONE:
                if getattr(self, 'xFlatParagraph') != xFlatParagraph:
                    setattr(self, 'xFlatParagraph', xFlatParagraph)
            if not aText is UNO_NONE:
                if getattr(self, 'aText') != aText:
                    setattr(self, 'aText', aText)
            if not aLocale is UNO_NONE:
                if getattr(self, 'aLocale') != aLocale:
                    setattr(self, 'aLocale', aLocale)
            if not nStartOfSentencePosition is UNO_NONE:
                if getattr(self, 'nStartOfSentencePosition') != nStartOfSentencePosition:
                    setattr(self, 'nStartOfSentencePosition', nStartOfSentencePosition)
            if not nBehindEndOfSentencePosition is UNO_NONE:
                if getattr(self, 'nBehindEndOfSentencePosition') != nBehindEndOfSentencePosition:
                    setattr(self, 'nBehindEndOfSentencePosition', nBehindEndOfSentencePosition)
            if not nStartOfNextSentencePosition is UNO_NONE:
                if getattr(self, 'nStartOfNextSentencePosition') != nStartOfNextSentencePosition:
                    setattr(self, 'nStartOfNextSentencePosition', nStartOfNextSentencePosition)
            if not xProofreader is UNO_NONE:
                if getattr(self, 'xProofreader') != xProofreader:
                    setattr(self, 'xProofreader', xProofreader)

        type_name = 'com.sun.star.linguistic2.ProofreadingResult'
        struct = uno.getClass(type_name)
        struct.__ooo_ns__ = 'com.sun.star.linguistic2'
        struct.__ooo_full_ns__= type_name
        struct.__ooo_type_name__ = 'struct'
        orig_init = struct.__init__
        struct.__init__ = init
        return struct

    ProofreadingResult = _get_class()


else:
    from ...lo.linguistic2.proofreading_result import ProofreadingResult as ProofreadingResult

__all__ = ['ProofreadingResult']

