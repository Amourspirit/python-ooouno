# coding: utf-8
#
# Copyright 2022 :Barry-Thomas-Paul: Moss
#
# Licensed under the Apache License, Version 2.0 (the "License")
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http: // www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# Enum Class
# this is a auto generated file generated by Cheetah
# Namespace: com.sun.star.ucb
# Libre Office Version: 7.2
from typing import TYPE_CHECKING
from enum import Enum
from ooo_uno.oenv import UNO_ENVIRONMENT, UNO_RUNTIME
_DYNAMIC = False
if (not TYPE_CHECKING) and UNO_RUNTIME and UNO_ENVIRONMENT:
    _DYNAMIC = True
    from ooo_uno.helper.enum_helper import uno_enum_class_new
    from com.sun.star.ucb.WebDAVHTTPMethod import (CONNECT, COPY, DELETE, GET, HEAD, LOCK, MKCOL, MOVE, OPTIONS, PATCH, POST, PROPFIND, PROPPATCH, PUT, TRACE, UNLOCK)

if TYPE_CHECKING or _DYNAMIC is False:


    class WebDAVHTTPMethod(Enum):
        """
        Enum Class

        

        See Also:
            `API WebDAVHTTPMethod <https://api.libreoffice.org/docs/idl/ref/namespacecom_1_1sun_1_1star_1_1ucb.html#a3c143367536e0c519b25183505ae3ed7>`_
        """
        CONNECT = 'CONNECT'
        """
        HTTP request method as defined in RFC 2616: Hypertext Transfer Protocol – HTTP/1.1
        """
        COPY = 'COPY'
        """
        Copy the source to the target folder.
        
        WebDAV methods as defined in HTTP Extensions for Web Distributed Authoring and Versioning (WebDAV)
        """
        DELETE = 'DELETE'
        """
        HTTP request method as defined in RFC 2616: Hypertext Transfer Protocol – HTTP/1.1
        """
        GET = 'GET'
        """
        Get a list of all folders.
        
        HTTP request method as defined in RFC 2616: Hypertext Transfer Protocol – HTTP/1.1
        """
        HEAD = 'HEAD'
        """
        HTTP request method as defined in RFC 2616: Hypertext Transfer Protocol – HTTP/1.1
        """
        LOCK = 'LOCK'
        """
        WebDAV methods as defined in HTTP Extensions for Web Distributed Authoring and Versioning (WebDAV)
        """
        MKCOL = 'MKCOL'
        """
        WebDAV methods as defined in HTTP Extensions for Web Distributed Authoring and Versioning (WebDAV)
        """
        MOVE = 'MOVE'
        """
        Move the source to the target folder.
        
        WebDAV methods as defined in HTTP Extensions for Web Distributed Authoring and Versioning (WebDAV)
        """
        OPTIONS = 'OPTIONS'
        """
        HTTP request method as defined in RFC 2616: Hypertext Transfer Protocol – HTTP/1.1
        """
        PATCH = 'PATCH'
        """
        HTTP request method as defined in RFC 5789: PATCH Method for HTTP
        """
        POST = 'POST'
        """
        HTTP request method as defined in RFC 2616: Hypertext Transfer Protocol – HTTP/1.1
        """
        PROPFIND = 'PROPFIND'
        """
        WebDAV methods as defined in HTTP Extensions for Web Distributed Authoring and Versioning (WebDAV)
        """
        PROPPATCH = 'PROPPATCH'
        """
        WebDAV methods as defined in HTTP Extensions for Web Distributed Authoring and Versioning (WebDAV)
        """
        PUT = 'PUT'
        """
        HTTP request method as defined in RFC 2616: Hypertext Transfer Protocol – HTTP/1.1
        """
        TRACE = 'TRACE'
        """
        HTTP request method as defined in RFC 2616: Hypertext Transfer Protocol – HTTP/1.1
        """
        UNLOCK = 'UNLOCK'
        """
        WebDAV methods as defined in HTTP Extensions for Web Distributed Authoring and Versioning (WebDAV)
        """

if not TYPE_CHECKING and _DYNAMIC:
    def _dynamic_enum():
        # Dynamically create class that actually contains UNO enum instances
        global WebDAVHTTPMethod
        _dict = {
            "CONNECT": CONNECT,
            "COPY": COPY,
            "DELETE": DELETE,
            "GET": GET,
            "HEAD": HEAD,
            "LOCK": LOCK,
            "MKCOL": MKCOL,
            "MOVE": MOVE,
            "OPTIONS": OPTIONS,
            "PATCH": PATCH,
            "POST": POST,
            "PROPFIND": PROPFIND,
            "PROPPATCH": PROPPATCH,
            "PUT": PUT,
            "TRACE": TRACE,
            "UNLOCK": UNLOCK,
        }

        WebDAVHTTPMethod = type('WebDAVHTTPMethod', (object,), {
            '__doc__': 'class created dynamically. Class loosly mimics Enum',
            "__new__": uno_enum_class_new
        })
        for k, v in _dict.items():
            setattr(WebDAVHTTPMethod, k, v)

    _dynamic_enum()

__all__ = ['WebDAVHTTPMethod']

