# coding: utf-8
#
# Copyright 2023 :Barry-Thomas-Paul: Moss
#
# Licensed under the Apache License, Version 2.0 (the "License")
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http: // www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# Interface Class
# this is a auto generated file generated by Cheetah
# Libre Office Version: 7.4
# Namespace: com.sun.star.datatransfer.clipboard
import typing
from abc import abstractmethod
from ...uno.x_interface import XInterface as XInterface_8f010a43
if typing.TYPE_CHECKING:
    from .x_clipboard import XClipboard as XClipboard_a18a11cd

class XClipboardManager(XInterface_8f010a43):
    """
    This interface is used to retrieve, add, or remove clipboard instances.

    See Also:
        `API XClipboardManager <https://api.libreoffice.org/docs/idl/ref/interfacecom_1_1sun_1_1star_1_1datatransfer_1_1clipboard_1_1XClipboardManager.html>`_
    """
    __ooo_ns__: str = 'com.sun.star.datatransfer.clipboard'
    __ooo_full_ns__: str = 'com.sun.star.datatransfer.clipboard.XClipboardManager'
    __ooo_type_name__: str = 'interface'
    __pyunointerface__: str = 'com.sun.star.datatransfer.clipboard.XClipboardManager'

    @abstractmethod
    def addClipboard(self, xClipboard: 'XClipboard_a18a11cd') -> None:
        """
        Add a clipboard instance to the manager's list.

        Raises:
            com.sun.star.lang.IllegalArgumentException: ``IllegalArgumentException``
            com.sun.star.container.ElementExistException: ``ElementExistException``
        """
        ...
    @abstractmethod
    def getClipboard(self, aName: str) -> 'XClipboard_a18a11cd':
        """
        Get a clipboard instance by name.

        Raises:
            com.sun.star.container.NoSuchElementException: ``NoSuchElementException``
        """
        ...
    @abstractmethod
    def listClipboardNames(self) -> 'typing.Tuple[str, ...]':
        """
        Get a list of a managed clipboards.
        """
        ...
    @abstractmethod
    def removeClipboard(self, aName: str) -> None:
        """
        Removes the clipboard with the specified name from the list.
        """
        ...

__all__ = ['XClipboardManager']

