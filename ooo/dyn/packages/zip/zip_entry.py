# coding: utf-8
#
# Copyright 2022 :Barry-Thomas-Paul: Moss
#
# Licensed under the Apache License, Version 2.0 (the "License")
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http: // www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# Struct Class
# this is a auto generated file generated by Cheetah
# Namespace: com.sun.star.packages.zip
# Libre Office Version: 7.2
from typing import TYPE_CHECKING
from ooo.oenv import UNO_ENVIRONMENT, UNO_RUNTIME, UNO_NONE
if (not TYPE_CHECKING) and UNO_RUNTIME and UNO_ENVIRONMENT:
    import uno
 
    def _get_class():
        orig_init = None
        def init(self, extra = UNO_NONE, nVersion = UNO_NONE, nFlag = UNO_NONE, nMethod = UNO_NONE, nTime = UNO_NONE, nCrc = UNO_NONE, nCompressedSize = UNO_NONE, nSize = UNO_NONE, nOffset = UNO_NONE, nDiskNumber = UNO_NONE, sName = UNO_NONE, sComment = UNO_NONE):
            if getattr(extra, "__class__", None) == self.__class__:
                orig_init(self, extra)
                return
            else:
                orig_init(self)
            if not extra is UNO_NONE:
                if getattr(self, 'extra') != extra:
                    setattr(self, 'extra', extra)
            if not nVersion is UNO_NONE:
                if getattr(self, 'nVersion') != nVersion:
                    setattr(self, 'nVersion', nVersion)
            if not nFlag is UNO_NONE:
                if getattr(self, 'nFlag') != nFlag:
                    setattr(self, 'nFlag', nFlag)
            if not nMethod is UNO_NONE:
                if getattr(self, 'nMethod') != nMethod:
                    setattr(self, 'nMethod', nMethod)
            if not nTime is UNO_NONE:
                if getattr(self, 'nTime') != nTime:
                    setattr(self, 'nTime', nTime)
            if not nCrc is UNO_NONE:
                if getattr(self, 'nCrc') != nCrc:
                    setattr(self, 'nCrc', nCrc)
            if not nCompressedSize is UNO_NONE:
                if getattr(self, 'nCompressedSize') != nCompressedSize:
                    setattr(self, 'nCompressedSize', nCompressedSize)
            if not nSize is UNO_NONE:
                if getattr(self, 'nSize') != nSize:
                    setattr(self, 'nSize', nSize)
            if not nOffset is UNO_NONE:
                if getattr(self, 'nOffset') != nOffset:
                    setattr(self, 'nOffset', nOffset)
            if not nDiskNumber is UNO_NONE:
                if getattr(self, 'nDiskNumber') != nDiskNumber:
                    setattr(self, 'nDiskNumber', nDiskNumber)
            if not sName is UNO_NONE:
                if getattr(self, 'sName') != sName:
                    setattr(self, 'sName', sName)
            if not sComment is UNO_NONE:
                if getattr(self, 'sComment') != sComment:
                    setattr(self, 'sComment', sComment)

        type_name = 'com.sun.star.packages.zip.ZipEntry'
        struct = uno.getClass(type_name)
        struct.__ooo_ns__ = 'com.sun.star.packages.zip'
        struct.__ooo_full_ns__= type_name
        struct.__ooo_type_name__ = 'struct'
        orig_init = struct.__init__
        struct.__init__ = init
        return struct

    ZipEntry = _get_class()


else:
    from ....lo.packages.zip.zip_entry import ZipEntry as ZipEntry

__all__ = ['ZipEntry']

