# coding: utf-8
# this is a auto generated file generated by Cheetah
from typing import TYPE_CHECKING
from enum import Enum
from ...oenv import UNO_ENVIRONMENT
if (not TYPE_CHECKING) and UNO_ENVIRONMENT:
    from ...helper.enum_helper import uno_enum_class_new
    from com.sun.star.style.VerticalAlignment import (TOP, MIDDLE, BOTTOM, )


class VerticalAlignment(Enum):
    """
    specify the horizontal alignment of an object within a container object.

    See Also:
        `API VerticalAlignment <https://api.libreoffice.org/docs/idl/ref/namespacecom_1_1sun_1_1star_1_1style.html#a9c2ed22cfbd21f13df24ea193b310aee>`_
    """
    TOP = 'TOP'
    """
    set the vertical alignment to the center between the top and bottom margins from the container object.
    """
    MIDDLE = 'MIDDLE'
    """
    set the vertical alignment to the top margin from the container object.
    """
    BOTTOM = 'BOTTOM'
    """
    set the vertical alignment to the bottom margin from the container object.
    """


def _dynamic_enum():
    # Dynamically create class that actuall contains UNO enum instances

    global VerticalAlignment

    # if statment is to stop VS Code from reporting errors
    if (not TYPE_CHECKING) and UNO_ENVIRONMENT:

        _dict = {
            "TOP": TOP,
            "MIDDLE": MIDDLE,
            "BOTTOM": BOTTOM,
        }
        VerticalAlignment = type('VerticalAlignment', (object,), {
            '__doc__': 'class created dynamically. Class loosly mimics Enum',
            "__new__": uno_enum_class_new
        })
        for k, v in _dict.items():
            setattr(VerticalAlignment, k, v)


if UNO_ENVIRONMENT:
    _dynamic_enum()

__all__ = ['VerticalAlignment']
