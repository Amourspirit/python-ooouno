# coding: utf-8
#
# Copyright 2023 :Barry-Thomas-Paul: Moss
#
# Licensed under the Apache License, Version 2.0 (the "License")
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http: // www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# Enum Class
# this is a auto generated file generated by Cheetah
# Namespace: com.sun.star.ucb
# Libre Office Version: 7.4
from __future__ import annotations
import uno
from typing import Any, cast, TYPE_CHECKING


if TYPE_CHECKING:

    from com.sun.star.ucb.Priority import HIGH as PRIORITY_HIGH
    from com.sun.star.ucb.Priority import HIGHEST as PRIORITY_HIGHEST
    from com.sun.star.ucb.Priority import LOW as PRIORITY_LOW
    from com.sun.star.ucb.Priority import LOWEST as PRIORITY_LOWEST
    from com.sun.star.ucb.Priority import NORMAL as PRIORITY_NORMAL

    class Priority(uno.Enum):
        """
        Enum Class


        See Also:
            `API Priority <https://api.libreoffice.org/docs/idl/ref/namespacecom_1_1sun_1_1star_1_1ucb.html#a315655b1bb5848c063491adffde62b15>`_
        """

        def __init__(self, value: Any) -> None:
            super().__init__('com.sun.star.ucb.Priority', value)

        __ooo_ns__: str = 'com.sun.star.ucb'
        __ooo_full_ns__: str = 'com.sun.star.ucb.Priority'
        __ooo_type_name__: str = 'enum'

        HIGH = cast("Priority", PRIORITY_HIGH)
        """
        High priority.
        """
        HIGHEST = cast("Priority", PRIORITY_HIGHEST)
        """
        Highest priority.
        """
        LOW = cast("Priority", PRIORITY_LOW)
        """
        Low priority.
        """
        LOWEST = cast("Priority", PRIORITY_LOWEST)
        """
        Lowest priority.
        """
        NORMAL = cast("Priority", PRIORITY_NORMAL)
        """
        Normal priority.
        """

else:

    from ooo.helper.enum_helper import UnoEnumMeta
    class Priority(metaclass=UnoEnumMeta, type_name="com.sun.star.ucb.Priority", name_space="com.sun.star.ucb"):
        """Dynamically created class that represents ``com.sun.star.ucb.Priority`` Enum. Class loosely mimics Enum"""
        pass

__all__ = ['Priority']
