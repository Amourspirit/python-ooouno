# coding: utf-8
#
# Copyright 2022 :Barry-Thomas-Paul: Moss
#
# Licensed under the Apache License, Version 2.0 (the "License")
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http: // www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# Struct Class
# this is a auto generated file generated by Cheetah
# Namespace: com.sun.star.rendering
# Libre Office Version: 7.2
from typing import TYPE_CHECKING
from ooo.oenv import UNO_ENVIRONMENT, UNO_RUNTIME, UNO_NONE
_DYNAMIC = False
if (not TYPE_CHECKING) and UNO_RUNTIME and UNO_ENVIRONMENT:
    _DYNAMIC = True

if not TYPE_CHECKING and _DYNAMIC:
    def _dynamic_struct():
        import uno
        from com.sun.star.rendering import StrokeAttributes as UStrokeAttributes
        # Dynamically create uno com.sun.star.rendering.StrokeAttributes using uno
        global StrokeAttributes

        def _set_attr(struct):
            struct.__dict__['__ooo_ns__'] = 'com.sun.star.rendering'
            struct.__dict__['__ooo_full_ns__'] = 'com.sun.star.rendering.StrokeAttributes'
            struct.__dict__['__ooo_type_name__'] = 'struct'

        def _struct_init(DashArray = UNO_NONE, LineArray = UNO_NONE, StrokeWidth = UNO_NONE, MiterLimit = UNO_NONE, StartCapType = UNO_NONE, EndCapType = UNO_NONE, JoinType = UNO_NONE):
            ns = 'com.sun.star.rendering.StrokeAttributes'
            if isinstance(DashArray, UStrokeAttributes):
                inst = uno.createUnoStruct(ns, DashArray)
                _set_attr(inst)
                return inst
            struct = uno.createUnoStruct(ns)

            if not DashArray is UNO_NONE:
                if getattr(struct, 'DashArray') != DashArray:
                    setattr(struct, 'DashArray', DashArray)
            if not LineArray is UNO_NONE:
                if getattr(struct, 'LineArray') != LineArray:
                    setattr(struct, 'LineArray', LineArray)
            if not StrokeWidth is UNO_NONE:
                if getattr(struct, 'StrokeWidth') != StrokeWidth:
                    setattr(struct, 'StrokeWidth', StrokeWidth)
            if not MiterLimit is UNO_NONE:
                if getattr(struct, 'MiterLimit') != MiterLimit:
                    setattr(struct, 'MiterLimit', MiterLimit)
            if not StartCapType is UNO_NONE:
                if getattr(struct, 'StartCapType') != StartCapType:
                    setattr(struct, 'StartCapType', StartCapType)
            if not EndCapType is UNO_NONE:
                if getattr(struct, 'EndCapType') != EndCapType:
                    setattr(struct, 'EndCapType', EndCapType)
            if not JoinType is UNO_NONE:
                if getattr(struct, 'JoinType') != JoinType:
                    setattr(struct, 'JoinType', JoinType)
            _set_attr(struct)
            return struct
        StrokeAttributes = _struct_init

    _dynamic_struct()
else:
    from ...lo.rendering.stroke_attributes import StrokeAttributes as StrokeAttributes

__all__ = ['StrokeAttributes']

