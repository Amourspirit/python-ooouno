# coding: utf-8
#
# Copyright 2022 :Barry-Thomas-Paul: Moss
#
# Licensed under the Apache License, Version 2.0 (the "License")
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http: // www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# Exception Class
# this is a auto generated file generated by Cheetah
# Namespace: com.sun.star.sdb
# Libre Office Version: 7.2
from typing import TYPE_CHECKING
from ooo.oenv import UNO_ENVIRONMENT, UNO_RUNTIME, UNO_NONE
_DYNAMIC = False
if (not TYPE_CHECKING) and UNO_RUNTIME and UNO_ENVIRONMENT:
    _DYNAMIC = True

if not TYPE_CHECKING and _DYNAMIC:
    def _dynamic_ex() -> None:
        import uno
        # Dynamically create uno com.sun.star.sdb.ParametersRequest using uno
        global ParametersRequest

        def _set_attr(ex):
            ex.__dict__['__ooo_ns__'] = 'com.sun.star.sdb'
            ex.__dict__['__ooo_full_ns__'] = 'com.sun.star.sdb.ParametersRequest'
            ex.__dict__['__ooo_type_name__'] = 'exception'

        def _ex_init(Parameters = UNO_NONE, Connection = UNO_NONE, **kwargs):
            ns = 'com.sun.star.sdb.ParametersRequest'
            ex = uno.createUnoStruct(ns)
            if not Parameters is UNO_NONE:
                if getattr(ex, 'Parameters') != Parameters:
                    setattr(ex, 'Parameters', Parameters)
            if not Connection is UNO_NONE:
                if getattr(ex, 'Connection') != Connection:
                    setattr(ex, 'Connection', Connection)
            for k, v in kwargs.items():
                if v is UNO_NONE:
                    continue
                else:
                    setattr(ex, k, v)
            _set_attr(ex)
            return ex
        ParametersRequest = _ex_init

    _dynamic_ex()
else:
    from ...lo.sdb.parameters_request import ParametersRequest as ParametersRequest
    
__all__ = ['ParametersRequest']

