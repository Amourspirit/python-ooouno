# coding: utf-8
#
# Copyright 2022 :Barry-Thomas-Paul: Moss
#
# Licensed under the Apache License, Version 2.0 (the "License")
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http: // www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# Struct Class
# this is a auto generated file generated by Cheetah
# Namespace: com.sun.star.awt
# Libre Office Version: 7.2
from ooo.oenv import UNO_NONE
from .mouse_event import MouseEvent as MouseEvent_8f430a5f
import typing
from ..uno.x_interface import XInterface as XInterface_8f010a43


class EnhancedMouseEvent(MouseEvent_8f430a5f):
    """
    Struct Class

    specifies an event from the mouse.
    
    **since**
    
        OOo 2.0

    See Also:
        `API EnhancedMouseEvent <https://api.libreoffice.org/docs/idl/ref/structcom_1_1sun_1_1star_1_1awt_1_1EnhancedMouseEvent.html>`_
    """
    __ooo_ns__: str = 'com.sun.star.awt'
    __ooo_full_ns__: str = 'com.sun.star.awt.EnhancedMouseEvent'
    __ooo_type_name__: str = 'struct'
    typeName: str = 'com.sun.star.awt.EnhancedMouseEvent'
    """Literal Constant ``com.sun.star.awt.EnhancedMouseEvent``"""

    def __init__(self, Target: XInterface_8f010a43 = None, **kwargs) -> None:
        """
        Constructor

        Other Arguments:
            ``Target`` can be another ``EnhancedMouseEvent`` instance,
                in which case other named args are ignored.
                However ``**kwargs`` are still passed so parent class.

        Arguments:
            Target (XInterface, optional): Target value
        """
        super().__init__(**kwargs)
        if isinstance(Target, EnhancedMouseEvent):
            oth: EnhancedMouseEvent = Target
            self._target = oth.Target
            return
        else:
            self._target = Target



    @property
    def Target(self) -> XInterface_8f010a43:
        """
        contains the object on the location of the mouse.
        """
        return self._target
    
    @Target.setter
    def Target(self, value: XInterface_8f010a43) -> None:
        self._target = value


__all__ = ['EnhancedMouseEvent']
