# coding: utf-8
#
# Copyright 2022 :Barry-Thomas-Paul: Moss
#
# Licensed under the Apache License, Version 2.0 (the "License")
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http: // www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# Struct Class
# this is a auto generated file generated by Cheetah
# Namespace: com.sun.star.form
# Libre Office Version: 7.2
import os
from ..lang.event_object import EventObject as EventObject_a3d70b03
import typing
if typing.TYPE_CHECKING:
    from ..container.x_index_access import XIndexAccess as XIndexAccess_f0910d6d
from ooo_uno.oenv import UNO_ENVIRONMENT
if (not typing.TYPE_CHECKING) and UNO_ENVIRONMENT:
    from ooo_uno.helper import uno_helper


class DatabaseParameterEvent(EventObject_a3d70b03):
    """
    Struct Class

    is fired if values for parameters are needed.

    See Also:
        `API DatabaseParameterEvent <https://api.libreoffice.org/docs/idl/ref/structcom_1_1sun_1_1star_1_1form_1_1DatabaseParameterEvent.html>`_


    Note:
        | At runtime DatabaseParameterEvent will be an actual uno struct however can seamlessly be treated as a regualr class.
        | At design time a class is presumed. This allows for better typings.
        | DatabaseParameterEvent is a callable and can be treatead as a class and create instances.
    """

    def __init__(self, Parameters: 'typing.Optional[XIndexAccess_f0910d6d]' = None):
        self._parameters = Parameters

    @property
    def Parameters(self) -> 'XIndexAccess_f0910d6d':
        """
        specifies the list of parameters which are required for opening a result set.
        
        Usually, a com.sun.star.form.component.DataForm fires this event when loading the form requires parameters to be filled in.
        
        Every parameter object supports the com.sun.star.beans.XPropertySet interface, and at least the properties Name and Value
        """
        return self._parameters
    
    @Parameters.setter
    def Parameters(self, value: 'XIndexAccess_f0910d6d') -> None:
        self._parameters = value

def _dynamic_struct() -> None:
    # Dynamically create uno struct using uno
    global DatabaseParameterEvent
    ignore = os.environ.get('ooouno_ignore_runtime', 'False')
    if ignore == 'True':
        return
    if (not typing.TYPE_CHECKING) and UNO_ENVIRONMENT:
        order = ('Parameters',)
        def _struct_init(*args, **kwargs):
            struct = uno_helper.create_uno_struct('com.sun.star.form.DatabaseParameterEvent')
            for i, arg in enumerate(args):
                if arg is None:
                    continue
                setattr(struct, order[i], arg)
            for k, v in kwargs.items():
                setattr(struct, k, v)
            return struct
        DatabaseParameterEvent = _struct_init

if (not typing.TYPE_CHECKING) and UNO_ENVIRONMENT:
    _dynamic_struct()

__all__ = ['DatabaseParameterEvent']
