# coding: utf-8
#
# Copyright 2022 :Barry-Thomas-Paul: Moss
#
# Licensed under the Apache License, Version 2.0 (the "License")
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http: // www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# Struct Class
# this is a auto generated file generated by Cheetah
# Namespace: com.sun.star.i18n
# Libre Office Version: 7.2
from ooo.oenv import UNO_NONE
from .currency import Currency as Currency_80230993
import typing


class Currency2(Currency_80230993):
    """
    Struct Class

    Symbols, names, and attributes of a specific currency, returned in a sequence by XLocaleData2.getAllCurrencies2().
    
    It is derived from com.sun.star.i18n.Currency and provides an additional flag for currency entries that are available only for legacy reasons in context of loaded documents that use them, but otherwise should not be offered to the user to be selectable.
    
    **since**
    
        OOo 2.0.3

    See Also:
        `API Currency2 <https://api.libreoffice.org/docs/idl/ref/structcom_1_1sun_1_1star_1_1i18n_1_1Currency2.html>`_
    """
    __ooo_ns__: str = 'com.sun.star.i18n'
    __ooo_full_ns__: str = 'com.sun.star.i18n.Currency2'
    __ooo_type_name__: str = 'struct'
    typeName: str = 'com.sun.star.i18n.Currency2'
    """Literal Constant ``com.sun.star.i18n.Currency2``"""

    def __init__(self, LegacyOnly: bool = False, **kwargs) -> None:
        """
        Constructor

        Other Arguments:
            ``LegacyOnly`` can be another ``Currency2`` instance,
                in which case other named args are ignored.
                However ``**kwargs`` are still passed so parent class.

        Arguments:
            LegacyOnly (bool, optional): LegacyOnly value
        """
        super().__init__(**kwargs)
        if isinstance(LegacyOnly, Currency2):
            oth: Currency2 = LegacyOnly
            self._legacy_only = oth.LegacyOnly
            return
        else:
            self._legacy_only = LegacyOnly



    @property
    def LegacyOnly(self) -> bool:
        """
        If set, the currency and/or its symbol is only to be used in legacy context.
        
        **since**
        
            OOo 2.0.3
        """
        return self._legacy_only
    
    @LegacyOnly.setter
    def LegacyOnly(self, value: bool) -> None:
        self._legacy_only = value


__all__ = ['Currency2']
