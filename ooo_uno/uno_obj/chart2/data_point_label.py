# coding: utf-8
#
# Copyright 2022 :Barry-Thomas-Paul: Moss
#
# Licensed under the Apache License, Version 2.0 (the "License")
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http: // www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# Struct Class
# this is a auto generated file generated by Cheetah
# Namespace: com.sun.star.chart2
# Libre Office Version: 7.2
import os
import typing
from ooo_uno.oenv import UNO_ENVIRONMENT
if (not typing.TYPE_CHECKING) and UNO_ENVIRONMENT:
    from ooo_uno.helper import uno_helper


class DataPointLabel(object):
    """
    Struct Class

    
    **since**
    
        LibreOffice 7.1

    See Also:
        `API DataPointLabel <https://api.libreoffice.org/docs/idl/ref/structcom_1_1sun_1_1star_1_1chart2_1_1DataPointLabel.html>`_


    Note:
        | At runtime DataPointLabel will be an actual uno struct however can seamlessly be treated as a regualr class.
        | At design time a class is presumed. This allows for better typings.
        | DataPointLabel is a callable and can be treatead as a class and create instances.
    """

    def __init__(self, ShowCategoryName: typing.Optional[bool] = None, ShowCustomLabel: typing.Optional[bool] = None, ShowLegendSymbol: typing.Optional[bool] = None, ShowNumber: typing.Optional[bool] = None, ShowNumberInPercent: typing.Optional[bool] = None, ShowSeriesName: typing.Optional[bool] = None):
        self._show_category_name = ShowCategoryName
        self._show_custom_label = ShowCustomLabel
        self._show_legend_symbol = ShowLegendSymbol
        self._show_number = ShowNumber
        self._show_number_in_percent = ShowNumberInPercent
        self._show_series_name = ShowSeriesName

    @property
    def ShowCategoryName(self) -> bool:
        """
        The caption contains the category name of the category to which a data point belongs.
        """
        return self._show_category_name
    
    @ShowCategoryName.setter
    def ShowCategoryName(self, value: bool) -> None:
        self._show_category_name = value

    @property
    def ShowCustomLabel(self) -> bool:
        """
        The caption contains a custom label text, which belongs to a data point label.
        
        **since**
        
            LibreOffice 7.1
        """
        return self._show_custom_label
    
    @ShowCustomLabel.setter
    def ShowCustomLabel(self, value: bool) -> None:
        self._show_custom_label = value

    @property
    def ShowLegendSymbol(self) -> bool:
        """
        The symbol of data series is additionally displayed in the caption.
        """
        return self._show_legend_symbol
    
    @ShowLegendSymbol.setter
    def ShowLegendSymbol(self, value: bool) -> None:
        self._show_legend_symbol = value

    @property
    def ShowNumber(self) -> bool:
        """
        if TRUE, the value that is represented by a data point is displayed next to it.
        """
        return self._show_number
    
    @ShowNumber.setter
    def ShowNumber(self, value: bool) -> None:
        self._show_number = value

    @property
    def ShowNumberInPercent(self) -> bool:
        """
        This is only effective, if ShowNumber is TRUE.
        
        If this member is also TRUE, the numbers are displayed as percentages of a category.
        
        That means, if a data point is the first one of a series, the percentage is calculated by using the first data points of all available series.
        """
        return self._show_number_in_percent
    
    @ShowNumberInPercent.setter
    def ShowNumberInPercent(self, value: bool) -> None:
        self._show_number_in_percent = value

    @property
    def ShowSeriesName(self) -> bool:
        """
        The name of the data series is additionally displayed in the caption.
        
        **since**
        
            LibreOffice 7.2
        """
        return self._show_series_name
    
    @ShowSeriesName.setter
    def ShowSeriesName(self, value: bool) -> None:
        self._show_series_name = value

def _dynamic_struct() -> None:
    # Dynamically create uno struct using uno
    global DataPointLabel
    ignore = os.environ.get('ooouno_ignore_runtime', 'False')
    if ignore == 'True':
        return
    if (not typing.TYPE_CHECKING) and UNO_ENVIRONMENT:
        order = ('ShowCategoryName', 'ShowCustomLabel', 'ShowLegendSymbol', 'ShowNumber', 'ShowNumberInPercent', 'ShowSeriesName')
        def _struct_init(*args, **kwargs):
            struct = uno_helper.create_uno_struct('com.sun.star.chart2.DataPointLabel')
            for i, arg in enumerate(args):
                if arg is None:
                    continue
                setattr(struct, order[i], arg)
            for k, v in kwargs.items():
                setattr(struct, k, v)
            return struct
        DataPointLabel = _struct_init

if (not typing.TYPE_CHECKING) and UNO_ENVIRONMENT:
    _dynamic_struct()

__all__ = ['DataPointLabel']
