# coding: utf-8
#
# Copyright 2022 :Barry-Thomas-Paul: Moss
#
# Licensed under the Apache License, Version 2.0 (the "License")
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http: // www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# Struct Class
# this is a auto generated file generated by Cheetah
# Namespace: com.sun.star.i18n
# Libre Office Version: 7.2
from .currency import Currency as Currency_80230993
import typing
from ooo_uno.oenv import UNO_ENVIRONMENT, UNO_RUNTIME
_DYNAMIC = False
if (not typing.TYPE_CHECKING) and UNO_RUNTIME and UNO_ENVIRONMENT:
    _DYNAMIC = True
    from ooo_uno.helper import uno_helper

if typing.TYPE_CHECKING or _DYNAMIC is False:


    class Currency2(Currency_80230993):
        """
        Struct Class

        Symbols, names, and attributes of a specific currency, returned in a sequence by XLocaleData2.getAllCurrencies2().
        
        It is derived from com.sun.star.i18n.Currency and provides an additional flag for currency entries that are available only for legacy reasons in context of loaded documents that use them, but otherwise should not be offered to the user to be selectable.
        
        **since**
        
            OOo 2.0.3

        See Also:
            `API Currency2 <https://api.libreoffice.org/docs/idl/ref/structcom_1_1sun_1_1star_1_1i18n_1_1Currency2.html>`_


        Note:
            | At runtime Currency2 will be an actual uno struct however can seamlessly be treated as a regualr class.
            | At design time a class is presumed. This allows for better typings.
            | Currency2 is a callable and can be treatead as a class and create instances.
        """

        def __init__(self, LegacyOnly: typing.Optional[bool] = None):
            self._legacy_only = LegacyOnly

        @property
        def LegacyOnly(self) -> bool:
            """
            If set, the currency and/or its symbol is only to be used in legacy context.
            
            **since**
            
                OOo 2.0.3
            """
            return self._legacy_only
        
        @LegacyOnly.setter
        def LegacyOnly(self, value: bool) -> None:
            self._legacy_only = value

if not typing.TYPE_CHECKING and _DYNAMIC:
    def _dynamic_struct() -> None:
        # Dynamically create uno struct using uno
        global Currency2
        order = ('LegacyOnly',)

        def _struct_init(*args, **kwargs):
            struct = uno_helper.create_uno_struct('com.sun.star.i18n.Currency2')
            for i, arg in enumerate(args):
                if arg is None:
                    continue
                setattr(struct, order[i], arg)
            for k, v in kwargs.items():
                setattr(struct, k, v)
            return struct
        Currency2 = _struct_init

    _dynamic_struct()

__all__ = ['Currency2']
