# coding: utf-8
#
# Copyright 2022 :Barry-Thomas-Paul: Moss
#
# Licensed under the Apache License, Version 2.0 (the "License")
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http: // www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# Const Class
# this is a auto generated file generated by Cheetah
# Libre Office Version: 7.2
# Namespace: com.sun.star.chart2
from enum import IntEnum
from typing import TYPE_CHECKING
from ooo.oenv import UNO_ENVIRONMENT, UNO_RUNTIME
_DYNAMIC = False
if (not TYPE_CHECKING) and UNO_RUNTIME and UNO_ENVIRONMENT:
    _DYNAMIC = True

if not TYPE_CHECKING and _DYNAMIC:
    from com.sun.star.chart2 import AxisType as AxisType
    if hasattr(AxisType, '_constants') and isinstance(AxisType._constants, dict):
        AxisType._constants['__ooo_ns__'] = 'com.sun.star.chart2'
        AxisType._constants['__ooo_full_ns__'] = 'com.sun.star.chart2.AxisType'
        AxisType._constants['__ooo_type_name__'] = 'const'
    def build_enum():
        global AxisTypeEnum
        ls = [f for f in dir(AxisType) if not callable(getattr(AxisType, f)) and not f.startswith('__')]
        _dict = {}
        for name in ls:
            _dict[name] = getattr(AxisType, name)
        AxisTypeEnum = IntEnum('AxisTypeEnum', _dict)
    build_enum()
else:
    from ...lo.chart2.axis_type import AxisType as AxisType

    class AxisTypeEnum(IntEnum):
        """
        Enum of Const Class AxisType

        """
        REALNUMBER = AxisType.REALNUMBER
        """
        the axis represent real numbers
        """
        PERCENT = AxisType.PERCENT
        """
        the axis represent real numbers in percent
        """
        CATEGORY = AxisType.CATEGORY
        """
        the axis represent discrete categories
        """
        SERIES = AxisType.SERIES
        """
        the axis shows the series names (z axis)
        """
        DATE = AxisType.DATE
        """
        the axis shows dates
        """

__all__ = ['AxisType', 'AxisTypeEnum']
