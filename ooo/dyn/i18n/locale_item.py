# coding: utf-8
#
# Copyright 2023 :Barry-Thomas-Paul: Moss
#
# Licensed under the Apache License, Version 2.0 (the "License")
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http: // www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# Const Class
# this is a auto generated file generated by Cheetah
# Libre Office Version: 7.4
# Namespace: com.sun.star.i18n
import uno
from enum import IntEnum
from typing import TYPE_CHECKING
from ooo.oenv.env_const import UNO_ENVIRONMENT, UNO_RUNTIME

_DYNAMIC = False
if (not TYPE_CHECKING) and UNO_RUNTIME and UNO_ENVIRONMENT:
    _DYNAMIC = True

if not TYPE_CHECKING and _DYNAMIC:
    # document generators will most likely not see this.
    from ooo.helper.enum_helper import UnoConstMeta, ConstEnumMeta

    class LocaleItem(metaclass=UnoConstMeta, type_name="com.sun.star.i18n.LocaleItem", name_space="com.sun.star.i18n"):
        """Dynamic Class. Contains all the constant values of ``com.sun.star.i18n.LocaleItem``"""
        pass

    class LocaleItemEnum(IntEnum, metaclass=ConstEnumMeta, type_name="com.sun.star.i18n.LocaleItem", name_space="com.sun.star.i18n"):
        """Dynamic Enum. Contains all the constant values of ``com.sun.star.i18n.LocaleItem`` as Enum values"""
        pass

else:
    if TYPE_CHECKING:
        from com.sun.star.i18n import LocaleItem as LocaleItem
    else:
        # keep document generators happy
        from ...lo.i18n.locale_item import LocaleItem as LocaleItem

    class LocaleItemEnum(IntEnum):
        """
        Enum of Const Class LocaleItem

        These are not used with the API but with an OOo internal wrapper class that caches the contents of an instance of LocaleDataItem and uses these values to access it's members for faster access.
        
        Whenever locale data items were added these values and the wrapper class would have to be adjusted to give the application an easier access.
        
        .. deprecated::
        
            Class is deprecated.
        """
        DATE_SEPARATOR = LocaleItem.DATE_SEPARATOR
        THOUSAND_SEPARATOR = LocaleItem.THOUSAND_SEPARATOR
        DECIMAL_SEPARATOR = LocaleItem.DECIMAL_SEPARATOR
        TIME_SEPARATOR = LocaleItem.TIME_SEPARATOR
        TIME_100SEC_SEPARATOR = LocaleItem.TIME_100SEC_SEPARATOR
        LIST_SEPARATOR = LocaleItem.LIST_SEPARATOR
        SINGLE_QUOTATION_START = LocaleItem.SINGLE_QUOTATION_START
        SINGLE_QUOTATION_END = LocaleItem.SINGLE_QUOTATION_END
        DOUBLE_QUOTATION_START = LocaleItem.DOUBLE_QUOTATION_START
        DOUBLE_QUOTATION_END = LocaleItem.DOUBLE_QUOTATION_END
        MEASUREMENT_SYSTEM = LocaleItem.MEASUREMENT_SYSTEM
        TIME_AM = LocaleItem.TIME_AM
        TIME_PM = LocaleItem.TIME_PM
        LONG_DATE_DAY_OF_WEEK_SEPARATOR = LocaleItem.LONG_DATE_DAY_OF_WEEK_SEPARATOR
        LONG_DATE_DAY_SEPARATOR = LocaleItem.LONG_DATE_DAY_SEPARATOR
        LONG_DATE_MONTH_SEPARATOR = LocaleItem.LONG_DATE_MONTH_SEPARATOR
        LONG_DATE_YEAR_SEPARATOR = LocaleItem.LONG_DATE_YEAR_SEPARATOR
        COUNT = LocaleItem.COUNT
        """
        count of items available
        """
        DECIMAL_SEPARATOR_ALTERNATIVE = LocaleItem.DECIMAL_SEPARATOR_ALTERNATIVE
        COUNT2 = LocaleItem.COUNT2
        """
        count of items available
        """

__all__ = ['LocaleItem', 'LocaleItemEnum']
