# coding: utf-8
#
# Copyright 2023 :Barry-Thomas-Paul: Moss
#
# Licensed under the Apache License, Version 2.0 (the "License")
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http: // www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# Enum Class
# this is a auto generated file generated by Cheetah
# Namespace: com.sun.star.drawing
# Libre Office Version: 7.4
import uno
from typing import TYPE_CHECKING
from ooo.oenv.env_const import UNO_ENVIRONMENT, UNO_RUNTIME
_DYNAMIC = False
if (not TYPE_CHECKING) and UNO_RUNTIME and UNO_ENVIRONMENT:
    _DYNAMIC = True

if not TYPE_CHECKING and _DYNAMIC:
    from ooo.helper.enum_helper import UnoEnumMeta
    class TextureProjectionMode(metaclass=UnoEnumMeta, type_name="com.sun.star.drawing.TextureProjectionMode", name_space="com.sun.star.drawing"):
        """Dynamically created class that represents ``com.sun.star.drawing.TextureProjectionMode`` Enum. Class loosly mimics Enum"""
        pass
else:
    from com.sun.star.drawing.TextureProjectionMode import OBJECTSPECIFIC as TEXTURE_PROJECTION_MODE_OBJECTSPECIFIC
    from com.sun.star.drawing.TextureProjectionMode import PARALLEL as TEXTURE_PROJECTION_MODE_PARALLEL
    from com.sun.star.drawing.TextureProjectionMode import SPHERE as TEXTURE_PROJECTION_MODE_SPHERE


    class TextureProjectionMode(uno.Enum):
        """
        Enum Class


        See Also:
            `API TextureProjectionMode <https://api.libreoffice.org/docs/idl/ref/namespacecom_1_1sun_1_1star_1_1drawing.html#ae1e109a5c70543e3b92db3b854fd3acb>`_
        """
        __ooo_ns__: str = 'com.sun.star.drawing'
        __ooo_full_ns__: str = 'com.sun.star.drawing.TextureProjectionMode'
        __ooo_type_name__: str = 'enum'

        @property
        def typeName(self) -> str:
            return 'com.sun.star.drawing.TextureProjectionMode'

        OBJECTSPECIFIC = TEXTURE_PROJECTION_MODE_OBJECTSPECIFIC
        """
        This value specifies that the standard object projection method is used.
        """
        PARALLEL = TEXTURE_PROJECTION_MODE_PARALLEL
        """
        the 3D objects are drawn in the parallel projection.
        
        This value specifies a flat parallel projection in the specified degree of freedom (X or Y).
        """
        SPHERE = TEXTURE_PROJECTION_MODE_SPHERE
        """
        forces normals to think that the object is a sphere.
        
        This value forces projection to wrapping in X and/or Y.
        """

__all__ = ['TextureProjectionMode']

