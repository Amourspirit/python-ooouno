# coding: utf-8
#
# Copyright 2022 :Barry-Thomas-Paul: Moss
#
# Licensed under the Apache License, Version 2.0 (the "License")
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http: // www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# Enum Class
# this is a auto generated file generated by Cheetah
# Namespace: com.sun.star.beans
# Libre Office Version: 7.2
from typing import TYPE_CHECKING
from enum import Enum
from ooo_uno.oenv import UNO_ENVIRONMENT, UNO_RUNTIME
_DYNAMIC = False
if (not TYPE_CHECKING) and UNO_RUNTIME and UNO_ENVIRONMENT:
    _DYNAMIC = True
    from ooo_uno.helper.enum_helper import uno_enum_class_new
    from com.sun.star.beans.PropertyState import (AMBIGUOUS_VALUE, DEFAULT_VALUE, DIRECT_VALUE)

if TYPE_CHECKING or _DYNAMIC is False:


    class PropertyState(Enum):
        """
        Enum Class

        

        See Also:
            `API PropertyState <https://api.libreoffice.org/docs/idl/ref/namespacecom_1_1sun_1_1star_1_1beans.html#a1a5ccb5c59cace4a214c1e2eae8620b0>`_
        """
        AMBIGUOUS_VALUE = 'AMBIGUOUS_VALUE'
        """
        The value of the property is only a recommendation because there are multiple values for this property (e.g., from a multi selection).
        
        The PropertyAttribute field in the struct Property must contain the PropertyAttribute.MAYBEAMBIGUOUS flag. The property value must be available and of the specified type. If the Attribute field in the struct Property contains PropertyAttribute.MAYBEVOID, then the value may be void.
        """
        DEFAULT_VALUE = 'DEFAULT_VALUE'
        """
        The value of the property is available from a master (e.g., template).
        """
        DIRECT_VALUE = 'DIRECT_VALUE'
        """
        The value of the property is stored in the PropertySet itself.
        """

if not TYPE_CHECKING and _DYNAMIC:
    def _dynamic_enum():
        # Dynamically create class that actually contains UNO enum instances
        global PropertyState
        _dict = {
            "AMBIGUOUS_VALUE": AMBIGUOUS_VALUE,
            "DEFAULT_VALUE": DEFAULT_VALUE,
            "DIRECT_VALUE": DIRECT_VALUE,
        }

        PropertyState = type('PropertyState', (object,), {
            '__doc__': 'class created dynamically. Class loosly mimics Enum',
            "__new__": uno_enum_class_new
        })
        for k, v in _dict.items():
            setattr(PropertyState, k, v)

    _dynamic_enum()

__all__ = ['PropertyState']

