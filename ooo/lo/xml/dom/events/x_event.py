# coding: utf-8
#
# Copyright 2023 :Barry-Thomas-Paul: Moss
#
# Licensed under the Apache License, Version 2.0 (the "License")
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http: // www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# Interface Class
# this is a auto generated file generated by Cheetah
# Libre Office Version: 7.4
# Namespace: com.sun.star.xml.dom.events
import typing
from abc import abstractmethod
from ....uno.x_interface import XInterface as XInterface_8f010a43
if typing.TYPE_CHECKING:
    from ....util.time import Time as Time_604e0855
    from .phase_type import PhaseType as PhaseType_a120e1d
    from .x_event_target import XEventTarget as XEventTarget_36420f4b

class XEvent(XInterface_8f010a43):
    """

    See Also:
        `API XEvent <https://api.libreoffice.org/docs/idl/ref/interfacecom_1_1sun_1_1star_1_1xml_1_1dom_1_1events_1_1XEvent.html>`_
    """
    __ooo_ns__: str = 'com.sun.star.xml.dom.events'
    __ooo_full_ns__: str = 'com.sun.star.xml.dom.events.XEvent'
    __ooo_type_name__: str = 'interface'
    __pyunointerface__: str = 'com.sun.star.xml.dom.events.XEvent'

    @abstractmethod
    def getBubbles(self) -> bool:
        """
        """
        ...
    @abstractmethod
    def getCancelable(self) -> bool:
        """
        """
        ...
    @abstractmethod
    def getCurrentTarget(self) -> 'XEventTarget_36420f4b':
        """
        """
        ...
    @abstractmethod
    def getEventPhase(self) -> 'PhaseType_a120e1d':
        """
        """
        ...
    @abstractmethod
    def getTarget(self) -> 'XEventTarget_36420f4b':
        """
        """
        ...
    @abstractmethod
    def getTimeStamp(self) -> 'Time_604e0855':
        """
        """
        ...
    @abstractmethod
    def getType(self) -> str:
        """
        """
        ...
    @abstractmethod
    def initEvent(self, eventTypeArg: str, canBubbleArg: bool, cancelableArg: bool) -> None:
        """
        """
        ...
    @abstractmethod
    def preventDefault(self) -> None:
        """
        """
        ...
    @abstractmethod
    def stopPropagation(self) -> None:
        """
        """
        ...

__all__ = ['XEvent']

