# coding: utf-8
#
# Copyright 2022 :Barry-Thomas-Paul: Moss
#
# Licensed under the Apache License, Version 2.0 (the "License")
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http: // www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# Struct Class
# this is a auto generated file generated by Cheetah
# Namespace: com.sun.star.i18n
# Libre Office Version: 7.2
import typing
if typing.TYPE_CHECKING:
    from ..lang.locale import Locale as Locale_70d308fa
from ooo_uno.oenv import UNO_ENVIRONMENT, UNO_RUNTIME
_DYNAMIC = False
if (not typing.TYPE_CHECKING) and UNO_RUNTIME and UNO_ENVIRONMENT:
    _DYNAMIC = True
    from ooo_uno.helper import uno_helper

if typing.TYPE_CHECKING or _DYNAMIC is False:


    class NativeNumberXmlAttributes(object):
        """
        Struct Class

        Attributes describing a native number mode for a specific locale, stored in XML file format.
        
        Used with XNativeNumberSupplier.convertToXmlAttributes() and XNativeNumberSupplier.convertFromXmlAttributes()
        
        **since**
        
            OOo 1.1.2

        See Also:
            `API NativeNumberXmlAttributes <https://api.libreoffice.org/docs/idl/ref/structcom_1_1sun_1_1star_1_1i18n_1_1NativeNumberXmlAttributes.html>`_


        Note:
            | At runtime NativeNumberXmlAttributes will be an actual uno struct however can seamlessly be treated as a regualr class.
            | At design time a class is presumed. This allows for better typings.
            | NativeNumberXmlAttributes is a callable and can be treatead as a class and create instances.
        """

        def __init__(self, Format: typing.Optional[str] = None, Locale: 'typing.Optional[Locale_70d308fa]' = None, Style: typing.Optional[str] = None):
            self._format = Format
            self._locale = Locale
            self._style = Style

        @property
        def Format(self) -> str:
            """
            The number \"1\" expressed as a native number string.
            """
            return self._format
        
        @Format.setter
        def Format(self, value: str) -> None:
            self._format = value

        @property
        def Locale(self) -> 'Locale_70d308fa':
            """
            The locale of the native number representation.
            """
            return self._locale
        
        @Locale.setter
        def Locale(self, value: 'Locale_70d308fa') -> None:
            self._locale = value

        @property
        def Style(self) -> str:
            """
            The type of the number string, for example, \"short\" or \"medium\" or \"long\".
            """
            return self._style
        
        @Style.setter
        def Style(self, value: str) -> None:
            self._style = value

if not typing.TYPE_CHECKING and _DYNAMIC:
    def _dynamic_struct() -> None:
        # Dynamically create uno struct using uno
        global NativeNumberXmlAttributes
        order = ('Format', 'Locale', 'Style')

        def _struct_init(*args, **kwargs):
            struct = uno_helper.create_uno_struct('com.sun.star.i18n.NativeNumberXmlAttributes')
            for i, arg in enumerate(args):
                if arg is None:
                    continue
                setattr(struct, order[i], arg)
            for k, v in kwargs.items():
                setattr(struct, k, v)
            return struct
        NativeNumberXmlAttributes = _struct_init

    _dynamic_struct()

__all__ = ['NativeNumberXmlAttributes']
