# coding: utf-8
#
# Copyright 2022 :Barry-Thomas-Paul: Moss
#
# Licensed under the Apache License, Version 2.0 (the "License")
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http: // www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# Const Class
# this is a auto generated file generated by Cheetah
# Libre Office Version: 7.2
# Namespace: com.sun.star.sdbcx
from enum import IntEnum
from typing import TYPE_CHECKING
from ooo.oenv import UNO_ENVIRONMENT, UNO_RUNTIME
_DYNAMIC = False
if (not TYPE_CHECKING) and UNO_RUNTIME and UNO_ENVIRONMENT:
    _DYNAMIC = True

if not TYPE_CHECKING and _DYNAMIC:
    from com.sun.star.sdbcx import PrivilegeObject as PrivilegeObject
    if hasattr(PrivilegeObject, '_constants') and isinstance(PrivilegeObject._constants, dict):
        PrivilegeObject._constants['__ooo_ns__'] = 'com.sun.star.sdbcx'
        PrivilegeObject._constants['__ooo_full_ns__'] = 'com.sun.star.sdbcx.PrivilegeObject'
        PrivilegeObject._constants['__ooo_type_name__'] = 'const'
    def build_enum():
        global PrivilegeObjectEnum
        ls = [f for f in dir(PrivilegeObject) if not callable(getattr(PrivilegeObject, f)) and not f.startswith('__')]
        _dict = {}
        for name in ls:
            _dict[name] = getattr(PrivilegeObject, name)
        PrivilegeObjectEnum = IntEnum('PrivilegeObjectEnum', _dict)
    build_enum()
else:
    from ...lo.sdbcx.privilege_object import PrivilegeObject as PrivilegeObject

    class PrivilegeObjectEnum(IntEnum):
        """
        Enum of Const Class PrivilegeObject

        defines the list of objects for which a user may have access rights or not.
        
        This list may grow in the future.
        """
        TABLE = PrivilegeObject.TABLE
        """
        indicates a table.
        """
        VIEW = PrivilegeObject.VIEW
        """
        indicates a view.
        """
        COLUMN = PrivilegeObject.COLUMN
        """
        indicates a column of a table.
        """

__all__ = ['PrivilegeObject', 'PrivilegeObjectEnum']
