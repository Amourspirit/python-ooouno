# coding: utf-8
#
# Copyright 2022 :Barry-Thomas-Paul: Moss
#
# Licensed under the Apache License, Version 2.0 (the "License")
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http: // www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# Struct Class
# this is a auto generated file generated by Cheetah
# Namespace: com.sun.star.sdb.application
# Libre Office Version: 7.2
import os
from ...lang.event_object import EventObject as EventObject_a3d70b03
import typing
if typing.TYPE_CHECKING:
    from ...sdbc.x_result_set import XResultSet as XResultSet_98e30aa7
from ooo_uno.oenv import UNO_ENVIRONMENT
if (not typing.TYPE_CHECKING) and UNO_ENVIRONMENT:
    from ooo_uno.helper import uno_helper


class CopyTableRowEvent(EventObject_a3d70b03):
    """
    Struct Class

    specifies an event happening while copying table data between databases.
    
    Whenever this event is fired to an XCopyTableListener, com.sun.star.lang.EventObject.Source contains the wizard instance which actually does the copying.

    See Also:
        `API CopyTableRowEvent <https://api.libreoffice.org/docs/idl/ref/structcom_1_1sun_1_1star_1_1sdb_1_1application_1_1CopyTableRowEvent.html>`_


    Note:
        | At runtime CopyTableRowEvent will be an actual uno struct however can seamlessly be treated as a regualr class.
        | At design time a class is presumed. This allows for better typings.
        | CopyTableRowEvent is a callable and can be treatead as a class and create instances.
    """

    def __init__(self, Error: typing.Optional[object] = None, SourceData: 'typing.Optional[XResultSet_98e30aa7]' = None):
        self._error = Error
        self._source_data = SourceData

    @property
    def Error(self) -> object:
        """
        denotes the error which happened while copying the data.
        
        Usually, this contains an instance of com.sun.star.sdbc.SQLException.
        """
        return self._error
    
    @Error.setter
    def Error(self, value: object) -> None:
        self._error = value

    @property
    def SourceData(self) -> 'XResultSet_98e30aa7':
        """
        contains the result set which is being copied by the wizard currently.
        """
        return self._source_data
    
    @SourceData.setter
    def SourceData(self, value: 'XResultSet_98e30aa7') -> None:
        self._source_data = value

def _dynamic_struct() -> None:
    # Dynamically create uno struct using uno
    global CopyTableRowEvent
    ignore = os.environ.get('ooouno_ignore_runtime', 'False')
    if ignore == 'True':
        return
    if (not typing.TYPE_CHECKING) and UNO_ENVIRONMENT:
        order = ('Error', 'SourceData')
        def _struct_init(*args, **kwargs):
            struct = uno_helper.create_uno_struct('com.sun.star.sdb.application.CopyTableRowEvent')
            for i, arg in enumerate(args):
                if arg is None:
                    continue
                setattr(struct, order[i], arg)
            for k, v in kwargs.items():
                setattr(struct, k, v)
            return struct
        CopyTableRowEvent = _struct_init

if (not typing.TYPE_CHECKING) and UNO_ENVIRONMENT:
    _dynamic_struct()

__all__ = ['CopyTableRowEvent']
