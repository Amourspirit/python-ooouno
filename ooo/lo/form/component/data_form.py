# coding: utf-8
#
# Copyright 2022 :Barry-Thomas-Paul: Moss
#
# Licensed under the Apache License, Version 2.0 (the "License")
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http: // www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# Service Class
# this is a auto generated file generated by Cheetah
# Libre Office Version: 7.2
# Namespace: com.sun.star.form.component
import typing
from abc import abstractproperty
from ..x_database_parameter_broadcaster import XDatabaseParameterBroadcaster as XDatabaseParameterBroadcaster_ac7f1234
from ..x_loadable import XLoadable as XLoadable_8e680a28
from ..x_reset import XReset as XReset_71670917
from .form import Form as Form_ca1d0c51
from ...sdb.row_set import RowSet as RowSet_67d208a5
if typing.TYPE_CHECKING:
    from ..navigation_bar_mode import NavigationBarMode as NavigationBarMode_efbc0d66
    from ..tabulator_cycle import TabulatorCycle as TabulatorCycle_c9250c5a

class DataForm(Form_ca1d0c51, RowSet_67d208a5, XDatabaseParameterBroadcaster_ac7f1234, XLoadable_8e680a28, XReset_71670917):
    """
    Service Class

    This service specifies a form which is connected to a database and displays the results of SQL queries.
    
    It provides the possibility of adding new data records, modifying existing ones, or deleting them.
    
    A database form is a special kind of enhanced database row set which provides all information for displaying the data and has more possibilities for configuring the data manipulation.

    See Also:
        `API DataForm <https://api.libreoffice.org/docs/idl/ref/servicecom_1_1sun_1_1star_1_1form_1_1component_1_1DataForm.html>`_
    """
    __ooo_ns__: str = 'com.sun.star.form.component'
    __ooo_full_ns__: str = 'com.sun.star.form.component.DataForm'
    __ooo_type_name__: str = 'service'

    @abstractproperty
    def AllowDeletes(self) -> bool:
        """
        determines if deletions of records of the form are allowed.
        
        Note that this is a recommendation for user interface components displaying the form. Form implementations may decide to allow for deletions done via the API, even if the property is set to FALSE, but the user interface should respect the property value.
        """

    @abstractproperty
    def AllowInserts(self) -> bool:
        """
        determines if insertions into the form's row set are allowed.
        
        Note that this is a recommendation for user interface components displaying the form. Form implementations may decide to allow for insertions done via the API, even if the property is set to FALSE, but the user interface should respect the property value.
        """

    @abstractproperty
    def AllowUpdates(self) -> bool:
        """
        determines if modifications of the current record of the form are allowed.
        
        Note that this is a recommendation for user interface components displaying the form. Form implementations may decide to allow for updates done via the API, even if the property is set to FALSE, but the user interface should respect the property value.
        """

    @abstractproperty
    def Cycle(self) -> 'TabulatorCycle_c9250c5a':
        """
        returns the kind of tabulator controlling.
        """

    @abstractproperty
    def NavigationBarMode(self) -> 'NavigationBarMode_efbc0d66':
        """
        determines how a navigation bar for this form should act.
        """



__all__ = ['DataForm']

