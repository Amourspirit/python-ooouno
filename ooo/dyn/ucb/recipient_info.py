# coding: utf-8
#
# Copyright 2022 :Barry-Thomas-Paul: Moss
#
# Licensed under the Apache License, Version 2.0 (the "License")
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http: // www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# Struct Class
# this is a auto generated file generated by Cheetah
# Namespace: com.sun.star.ucb
# Libre Office Version: 7.2
from typing import TYPE_CHECKING
from ooo.oenv import UNO_ENVIRONMENT, UNO_RUNTIME, UNO_NONE
if (not TYPE_CHECKING) and UNO_RUNTIME and UNO_ENVIRONMENT:
    import uno
 
    def _get_class():
        orig_init = None
        def init(self, ProtocolType = UNO_NONE, State = UNO_NONE, To = UNO_NONE, CC = UNO_NONE, BCC = UNO_NONE, Newsgroups = UNO_NONE, Server = UNO_NONE, Username = UNO_NONE, Password = UNO_NONE, VIMPostOfficePath = UNO_NONE, ProtocolErrorString = UNO_NONE, ProtocolErrorNumber = UNO_NONE, SendTries = UNO_NONE):
            if getattr(ProtocolType, "__class__", None) == self.__class__:
                orig_init(self, ProtocolType)
                return
            else:
                orig_init(self)
            if not ProtocolType is UNO_NONE:
                if getattr(self, 'ProtocolType') != ProtocolType:
                    setattr(self, 'ProtocolType', ProtocolType)
            if not State is UNO_NONE:
                if getattr(self, 'State') != State:
                    setattr(self, 'State', State)
            if not To is UNO_NONE:
                if getattr(self, 'To') != To:
                    setattr(self, 'To', To)
            if not CC is UNO_NONE:
                if getattr(self, 'CC') != CC:
                    setattr(self, 'CC', CC)
            if not BCC is UNO_NONE:
                if getattr(self, 'BCC') != BCC:
                    setattr(self, 'BCC', BCC)
            if not Newsgroups is UNO_NONE:
                if getattr(self, 'Newsgroups') != Newsgroups:
                    setattr(self, 'Newsgroups', Newsgroups)
            if not Server is UNO_NONE:
                if getattr(self, 'Server') != Server:
                    setattr(self, 'Server', Server)
            if not Username is UNO_NONE:
                if getattr(self, 'Username') != Username:
                    setattr(self, 'Username', Username)
            if not Password is UNO_NONE:
                if getattr(self, 'Password') != Password:
                    setattr(self, 'Password', Password)
            if not VIMPostOfficePath is UNO_NONE:
                if getattr(self, 'VIMPostOfficePath') != VIMPostOfficePath:
                    setattr(self, 'VIMPostOfficePath', VIMPostOfficePath)
            if not ProtocolErrorString is UNO_NONE:
                if getattr(self, 'ProtocolErrorString') != ProtocolErrorString:
                    setattr(self, 'ProtocolErrorString', ProtocolErrorString)
            if not ProtocolErrorNumber is UNO_NONE:
                if getattr(self, 'ProtocolErrorNumber') != ProtocolErrorNumber:
                    setattr(self, 'ProtocolErrorNumber', ProtocolErrorNumber)
            if not SendTries is UNO_NONE:
                if getattr(self, 'SendTries') != SendTries:
                    setattr(self, 'SendTries', SendTries)

        type_name = 'com.sun.star.ucb.RecipientInfo'
        struct = uno.getClass(type_name)
        struct.__ooo_ns__ = 'com.sun.star.ucb'
        struct.__ooo_full_ns__= type_name
        struct.__ooo_type_name__ = 'struct'
        orig_init = struct.__init__
        struct.__init__ = init
        return struct

    RecipientInfo = _get_class()


else:
    from ...lo.ucb.recipient_info import RecipientInfo as RecipientInfo

__all__ = ['RecipientInfo']

