# coding: utf-8
#
# Copyright 2022 :Barry-Thomas-Paul: Moss
#
# Licensed under the Apache License, Version 2.0 (the "License")
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http: // www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# Struct Class
# this is a auto generated file generated by Cheetah
# Namespace: com.sun.star.i18n
# Libre Office Version: 7.2
from typing import TYPE_CHECKING
from ooo.oenv import UNO_ENVIRONMENT, UNO_RUNTIME, UNO_NONE
if (not TYPE_CHECKING) and UNO_RUNTIME and UNO_ENVIRONMENT:
    import uno
 
    def _get_class():
        orig_init = None
        def init(self, LeadingWhiteSpace = UNO_NONE, EndPos = UNO_NONE, CharLen = UNO_NONE, Value = UNO_NONE, TokenType = UNO_NONE, StartFlags = UNO_NONE, ContFlags = UNO_NONE, DequotedNameOrString = UNO_NONE):
            if getattr(LeadingWhiteSpace, "__class__", None) == self.__class__:
                orig_init(self, LeadingWhiteSpace)
                return
            else:
                orig_init(self)
            if not LeadingWhiteSpace is UNO_NONE:
                if getattr(self, 'LeadingWhiteSpace') != LeadingWhiteSpace:
                    setattr(self, 'LeadingWhiteSpace', LeadingWhiteSpace)
            if not EndPos is UNO_NONE:
                if getattr(self, 'EndPos') != EndPos:
                    setattr(self, 'EndPos', EndPos)
            if not CharLen is UNO_NONE:
                if getattr(self, 'CharLen') != CharLen:
                    setattr(self, 'CharLen', CharLen)
            if not Value is UNO_NONE:
                if getattr(self, 'Value') != Value:
                    setattr(self, 'Value', Value)
            if not TokenType is UNO_NONE:
                if getattr(self, 'TokenType') != TokenType:
                    setattr(self, 'TokenType', TokenType)
            if not StartFlags is UNO_NONE:
                if getattr(self, 'StartFlags') != StartFlags:
                    setattr(self, 'StartFlags', StartFlags)
            if not ContFlags is UNO_NONE:
                if getattr(self, 'ContFlags') != ContFlags:
                    setattr(self, 'ContFlags', ContFlags)
            if not DequotedNameOrString is UNO_NONE:
                if getattr(self, 'DequotedNameOrString') != DequotedNameOrString:
                    setattr(self, 'DequotedNameOrString', DequotedNameOrString)

        type_name = 'com.sun.star.i18n.ParseResult'
        struct = uno.getClass(type_name)
        struct.__ooo_ns__ = 'com.sun.star.i18n'
        struct.__ooo_full_ns__= type_name
        struct.__ooo_type_name__ = 'struct'
        orig_init = struct.__init__
        struct.__init__ = init
        return struct

    ParseResult = _get_class()


else:
    from ...lo.i18n.parse_result import ParseResult as ParseResult

__all__ = ['ParseResult']

