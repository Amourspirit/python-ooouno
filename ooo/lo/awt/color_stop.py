# coding: utf-8
#
# Copyright 2023-2024 :Barry-Thomas-Paul: Moss
#
# Licensed under the Apache License, Version 2.0 (the "License")
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http: // www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# Struct Class
# this is a auto generated file generated by Cheetah
# Namespace: com.sun.star.awt
# Libre Office Version: 2024.2
from ooo.oenv.env_const import UNO_NONE
import typing
from ..rendering.rgb_color import RGBColor as RGBColor_bbdf0ba0


class ColorStop(object):
    """
    Struct Class

    defines a Color-Stop entry for a gradient definition

    See Also:
        `API ColorStop <https://api.libreoffice.org/docs/idl/ref/structcom_1_1sun_1_1star_1_1awt_1_1ColorStop.html>`_
    """
    __ooo_ns__: str = 'com.sun.star.awt'
    __ooo_full_ns__: str = 'com.sun.star.awt.ColorStop'
    __ooo_type_name__: str = 'struct'
    typeName: str = 'com.sun.star.awt.ColorStop'
    """Literal Constant ``com.sun.star.awt.ColorStop``"""

    def __init__(self, StopOffset: typing.Optional[float] = 0.0, StopColor: typing.Optional[RGBColor_bbdf0ba0] = UNO_NONE) -> None:
        """
        Constructor

        Arguments:
            StopOffset (float, optional): StopOffset value.
            StopColor (RGBColor, optional): StopColor value.
        """
        super().__init__()

        if isinstance(StopOffset, ColorStop):
            oth: ColorStop = StopOffset
            self.StopOffset = oth.StopOffset
            self.StopColor = oth.StopColor
            return

        kargs = {
            "StopOffset": StopOffset,
            "StopColor": StopColor,
        }
        if kargs["StopColor"] is UNO_NONE:
            kargs["StopColor"] = None
        self._init(**kargs)

    def _init(self, **kwargs) -> None:
        self._stop_offset = kwargs["StopOffset"]
        self._stop_color = kwargs["StopColor"]


    @property
    def StopOffset(self) -> float:
        """
        specifies the offset.
        """
        return self._stop_offset

    @StopOffset.setter
    def StopOffset(self, value: float) -> None:
        self._stop_offset = value

    @property
    def StopColor(self) -> RGBColor_bbdf0ba0:
        """
        contains the color value.
        """
        return self._stop_color

    @StopColor.setter
    def StopColor(self, value: RGBColor_bbdf0ba0) -> None:
        self._stop_color = value


__all__ = ['ColorStop']
