# coding: utf-8
#
# Copyright 2022 :Barry-Thomas-Paul: Moss
#
# Licensed under the Apache License, Version 2.0 (the "License")
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http: // www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# Struct Class
# this is a auto generated file generated by Cheetah
# Namespace: com.sun.star.chart2
# Libre Office Version: 7.2
from typing import TYPE_CHECKING
from ooo.oenv import UNO_ENVIRONMENT, UNO_RUNTIME, UNO_NONE
_DYNAMIC = False
if (not TYPE_CHECKING) and UNO_RUNTIME and UNO_ENVIRONMENT:
    _DYNAMIC = True

if not TYPE_CHECKING and _DYNAMIC:
    def _dynamic_struct():
        import uno
        from com.sun.star.chart2 import ScaleData as UScaleData
        # Dynamically create uno com.sun.star.chart2.ScaleData using uno
        global ScaleData

        def _set_attr(struct):
            struct.__dict__['__ooo_ns__'] = 'com.sun.star.chart2'
            struct.__dict__['__ooo_full_ns__'] = 'com.sun.star.chart2.ScaleData'
            struct.__dict__['__ooo_type_name__'] = 'struct'

        def _struct_init(Minimum = UNO_NONE, Maximum = UNO_NONE, Origin = UNO_NONE, Orientation = UNO_NONE, Scaling = UNO_NONE, Categories = UNO_NONE, AxisType = UNO_NONE, AutoDateAxis = UNO_NONE, ShiftedCategoryPosition = UNO_NONE, IncrementData = UNO_NONE, TimeIncrement = UNO_NONE):
            ns = 'com.sun.star.chart2.ScaleData'
            if isinstance(Minimum, UScaleData):
                inst = uno.createUnoStruct(ns, Minimum)
                _set_attr(inst)
                return inst
            struct = uno.createUnoStruct(ns)

            if not Minimum is UNO_NONE:
                if getattr(struct, 'Minimum') != Minimum:
                    setattr(struct, 'Minimum', Minimum)
            if not Maximum is UNO_NONE:
                if getattr(struct, 'Maximum') != Maximum:
                    setattr(struct, 'Maximum', Maximum)
            if not Origin is UNO_NONE:
                if getattr(struct, 'Origin') != Origin:
                    setattr(struct, 'Origin', Origin)
            if not Orientation is UNO_NONE:
                if getattr(struct, 'Orientation') != Orientation:
                    setattr(struct, 'Orientation', Orientation)
            if not Scaling is UNO_NONE:
                if getattr(struct, 'Scaling') != Scaling:
                    setattr(struct, 'Scaling', Scaling)
            if not Categories is UNO_NONE:
                if getattr(struct, 'Categories') != Categories:
                    setattr(struct, 'Categories', Categories)
            if not AxisType is UNO_NONE:
                if getattr(struct, 'AxisType') != AxisType:
                    setattr(struct, 'AxisType', AxisType)
            if not AutoDateAxis is UNO_NONE:
                if getattr(struct, 'AutoDateAxis') != AutoDateAxis:
                    setattr(struct, 'AutoDateAxis', AutoDateAxis)
            if not ShiftedCategoryPosition is UNO_NONE:
                if getattr(struct, 'ShiftedCategoryPosition') != ShiftedCategoryPosition:
                    setattr(struct, 'ShiftedCategoryPosition', ShiftedCategoryPosition)
            if not IncrementData is UNO_NONE:
                if getattr(struct, 'IncrementData') != IncrementData:
                    setattr(struct, 'IncrementData', IncrementData)
            if not TimeIncrement is UNO_NONE:
                if getattr(struct, 'TimeIncrement') != TimeIncrement:
                    setattr(struct, 'TimeIncrement', TimeIncrement)
            _set_attr(struct)
            return struct
        ScaleData = _struct_init

    _dynamic_struct()
else:
    from ...lo.chart2.scale_data import ScaleData as ScaleData

__all__ = ['ScaleData']

