# coding: utf-8
#
# Copyright 2022 :Barry-Thomas-Paul: Moss
#
# Licensed under the Apache License, Version 2.0 (the "License")
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http: // www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# Interface Class
# this is a auto generated file generated by Cheetah
# Libre Office Version: 7.2
# Namespace: com.sun.star.mozilla
import typing
from abc import abstractmethod
from ..uno.x_interface import XInterface as XInterface_8f010a43
if typing.TYPE_CHECKING:
    from .menu_multiple_change import MenuMultipleChange as MenuMultipleChange_2cc20f27
    from .menu_single_change import MenuSingleChange as MenuSingleChange_dad0e3d

class XMenuProxyListener(XInterface_8f010a43):
    """
    Listens for changes in menu items.

    See Also:
        `API XMenuProxyListener <https://api.libreoffice.org/docs/idl/ref/interfacecom_1_1sun_1_1star_1_1mozilla_1_1XMenuProxyListener.html>`_
    """
    __ooo_ns__: str = 'com.sun.star.mozilla'
    __ooo_full_ns__: str = 'com.sun.star.mozilla.XMenuProxyListener'
    __ooo_type_name__: str = 'interface'
    __pyunointerface__: str = 'com.sun.star.mozilla.XMenuProxyListener'

    @abstractmethod
    def menuChangedMultiple(self, MenuMultipleChanges: 'typing.Tuple[MenuMultipleChange_2cc20f27, ...]') -> None:
        """
        is called, if the content or graphical representation/state of the menu changes completely, for one or more menu items
        """
        ...
    @abstractmethod
    def menuChangedSingle(self, MenuSingleChanges: 'typing.Tuple[MenuSingleChange_dad0e3d, ...]') -> None:
        """
        is called, if the content or graphical representation/state of the menu changes, by one property for one or more menu items
        """
        ...
    @abstractmethod
    def menuItemDeleted(self, ID: int) -> None:
        """
        is called, if one menu item designated by the ID, is deleted.
        """
        ...

__all__ = ['XMenuProxyListener']

