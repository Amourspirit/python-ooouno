# coding: utf-8
#
# Copyright 2022 :Barry-Thomas-Paul: Moss
#
# Licensed under the Apache License, Version 2.0 (the "License")
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http: // www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# Singleton Class
# this is a auto generated file generated by Cheetah
# Namespace: com.sun.star.task
# Libre Office Version: 7.3
from .x_job_executor import XJobExecutor as XJobExecutor_af4e0b7d


class theJobExecutor(XJobExecutor_af4e0b7d):
    """
    Singleton Class

    Generic job execution singleton.
    
    Can start registered uno services on triggered events and handle there own configuration and there lifetime. Such events are simple strings which meaning doesn't matter for any real service implementation of this specification. But triggered events must be available inside the configuration and some Jobs or AsyncJobs must be registered for that.
    
    Prior to LibreOffice 4.3, this singleton was only available as a (single-instance) JobExecutor service.
    
    **since**
    
        LibreOffice 4.3

    See Also:
        `API theJobExecutor <https://api.libreoffice.org/docs/idl/ref/singletoncom_1_1sun_1_1star_1_1task_1_1theJobExecutor.html>`_
    """

    __ooo_ns__: str = 'com.sun.star.task'
    __ooo_full_ns__: str = 'com.sun.star.task.theJobExecutor'
    __ooo_type_name__: str = 'singleton'
    _instance = None

    def __new__(cls, *args, **kwargs):
        # single instance only allowed
        if cls._instance is None:
            cls._instance = super().__new__(cls, *args, **kwargs)
        return cls._instance


__all__ = ['theJobExecutor']

