# coding: utf-8
#
# Copyright 2022 :Barry-Thomas-Paul: Moss
#
# Licensed under the Apache License, Version 2.0 (the "License")
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http: // www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# Const Class
# this is a auto generated file generated by Cheetah
# Libre Office Version: 7.3
# Namespace: com.sun.star.ucb
from enum import IntEnum
from typing import TYPE_CHECKING
from ooo.oenv.env_const import UNO_ENVIRONMENT, UNO_RUNTIME

_DYNAMIC = False
if (not TYPE_CHECKING) and UNO_RUNTIME and UNO_ENVIRONMENT:
    _DYNAMIC = True

if not TYPE_CHECKING and _DYNAMIC:
    from ooo.helper.enum_helper import UnoConstMeta, ConstEnumMeta

    class RuleAction(metaclass=UnoConstMeta, type_name="com.sun.star.ucb.RuleAction", name_space="com.sun.star.ucb"):
        """Dynamic Class. Contains all the constant values of ``com.sun.star.ucb.RuleAction``"""
        pass

    class RuleActionEnum(IntEnum, metaclass=ConstEnumMeta, type_name="com.sun.star.ucb.RuleAction", name_space="com.sun.star.ucb"):
        """Dynamic Enum. Contains all the constant values of ``com.sun.star.ucb.RuleAction`` as Enum values"""
        pass

else:
    from ...lo.ucb.rule_action import RuleAction as RuleAction

    class RuleActionEnum(IntEnum):
        """
        Enum of Const Class RuleAction

        These are the possible values for Rule.Action.
        """
        NONE = RuleAction.NONE
        """
        \"None\" - Do nothing.
        """
        SHOW = RuleAction.SHOW
        """
        \"Show\" - Shows object when term matches.
        """
        HIDE = RuleAction.HIDE
        """
        \"Hide\" - Hides object when term matches.
        """
        MARK = RuleAction.MARK
        """
        \"Mark\" - Marks object when term matches.
        """
        UNMARK = RuleAction.UNMARK
        """
        \"UnMark\" - Removes mark from object when term matches.
        """
        MARKREAD = RuleAction.MARKREAD
        """
        \"MarkRead\" - Marks object as read when term matches.
        """
        MARKUNREAD = RuleAction.MARKUNREAD
        """
        \"MarkUnRead\" - Marks object as not read when term matches.
        """
        MOVE = RuleAction.MOVE
        """
        \"Move\" - Moves object to Rule.Parameter when term matches.
        """
        COPY = RuleAction.COPY
        """
        \"Copy\" - Copies object to Rule.Parameter when term matches.
        """
        DELETE = RuleAction.DELETE
        """
        \"Delete\" - Deletes object when term matches.
        """
        LINK = RuleAction.LINK
        """
        \"Link\" - Creates a link to Rule.Parameter when term matches.
        """
        FORWARD = RuleAction.FORWARD
        """
        \"Forward\" - Forwards object to Rule.Parameter when term matches.
        """

__all__ = ['RuleAction', 'RuleActionEnum']
