# coding: utf-8
#
# Copyright 2022 :Barry-Thomas-Paul: Moss
#
# Licensed under the Apache License, Version 2.0 (the "License")
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http: // www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# Enum Class
# this is a auto generated file generated by Cheetah
# Namespace: com.sun.star.sheet
# Libre Office Version: 7.2
from typing import TYPE_CHECKING
from enum import Enum
from ooo_uno.oenv import UNO_ENVIRONMENT, UNO_RUNTIME
_DYNAMIC = False
if (not TYPE_CHECKING) and UNO_RUNTIME and UNO_ENVIRONMENT:
    _DYNAMIC = True
    from ooo_uno.helper.enum_helper import uno_enum_class_new
    from com.sun.star.sheet.ValidationType import (ANY, CUSTOM, DATE, DECIMAL, LIST, TEXT_LEN, TIME, WHOLE)

if TYPE_CHECKING or _DYNAMIC is False:


    class ValidationType(Enum):
        """
        Enum Class

        

        See Also:
            `API ValidationType <https://api.libreoffice.org/docs/idl/ref/namespacecom_1_1sun_1_1star_1_1sheet.html#aa5aa6dbecaeb5e18a476b0a58279c57a>`_
        """
        ANY = 'ANY'
        """
        any cell content is valid; no conditions are used.
        """
        CUSTOM = 'CUSTOM'
        """
        The specified formula determines which contents are valid.
        """
        DATE = 'DATE'
        """
        specifies an arithmetic series for date values.
        
        any date value matching the specified condition is valid.
        """
        DECIMAL = 'DECIMAL'
        """
        any number matching the specified condition is valid.
        """
        LIST = 'LIST'
        """
        Only strings from a specified list are valid.
        """
        TEXT_LEN = 'TEXT_LEN'
        """
        string is valid if its length matches the specified condition.
        """
        TIME = 'TIME'
        """
        any time value matching the specified condition is valid.
        """
        WHOLE = 'WHOLE'
        """
        any whole number matching the specified condition is valid.
        """

if not TYPE_CHECKING and _DYNAMIC:
    def _dynamic_enum():
        # Dynamically create class that actually contains UNO enum instances
        global ValidationType
        _dict = {
            "ANY": ANY,
            "CUSTOM": CUSTOM,
            "DATE": DATE,
            "DECIMAL": DECIMAL,
            "LIST": LIST,
            "TEXT_LEN": TEXT_LEN,
            "TIME": TIME,
            "WHOLE": WHOLE,
        }

        ValidationType = type('ValidationType', (object,), {
            '__doc__': 'class created dynamically. Class loosly mimics Enum',
            "__new__": uno_enum_class_new
        })
        for k, v in _dict.items():
            setattr(ValidationType, k, v)

    _dynamic_enum()

__all__ = ['ValidationType']

