# coding: utf-8
#
# Copyright 2023 :Barry-Thomas-Paul: Moss
#
# Licensed under the Apache License, Version 2.0 (the "License")
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http: // www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# Enum Class
# this is a auto generated file generated by Cheetah
# Namespace: com.sun.star.awt
# Libre Office Version: 7.4
import uno
from typing import TYPE_CHECKING
from ooo.oenv.env_const import UNO_ENVIRONMENT, UNO_RUNTIME
_DYNAMIC = False
if (not TYPE_CHECKING) and UNO_RUNTIME and UNO_ENVIRONMENT:
    _DYNAMIC = True

if not TYPE_CHECKING and _DYNAMIC:
    from ooo.helper.enum_helper import UnoEnumMeta
    class RasterOperation(metaclass=UnoEnumMeta, type_name="com.sun.star.awt.RasterOperation", name_space="com.sun.star.awt"):
        """Dynamically created class that represents ``com.sun.star.awt.RasterOperation`` Enum. Class loosly mimics Enum"""
        pass
else:
    from com.sun.star.awt.RasterOperation import ALLBITS as RASTER_OPERATION_ALLBITS
    from com.sun.star.awt.RasterOperation import INVERT as RASTER_OPERATION_INVERT
    from com.sun.star.awt.RasterOperation import OVERPAINT as RASTER_OPERATION_OVERPAINT
    from com.sun.star.awt.RasterOperation import XOR as RASTER_OPERATION_XOR
    from com.sun.star.awt.RasterOperation import ZEROBITS as RASTER_OPERATION_ZEROBITS


    class RasterOperation(uno.Enum):
        """
        Enum Class


        See Also:
            `API RasterOperation <https://api.libreoffice.org/docs/idl/ref/namespacecom_1_1sun_1_1star_1_1awt.html#a54da390665a5b42acc81143cd24926fd>`_
        """
        __ooo_ns__: str = 'com.sun.star.awt'
        __ooo_full_ns__: str = 'com.sun.star.awt.RasterOperation'
        __ooo_type_name__: str = 'enum'

        @property
        def typeName(self) -> str:
            return 'com.sun.star.awt.RasterOperation'

        ALLBITS = RASTER_OPERATION_ALLBITS
        """
        All bits which are affected by this operation are set to 1.
        """
        INVERT = RASTER_OPERATION_INVERT
        """
        All bits which are affected by this operation are inverted.
        """
        OVERPAINT = RASTER_OPERATION_OVERPAINT
        """
        sets all pixel as written in the output operation.
        """
        XOR = RASTER_OPERATION_XOR
        """
        uses the pixel written as one and the current pixel as the other operator of an exclusive or-operation.
        """
        ZEROBITS = RASTER_OPERATION_ZEROBITS
        """
        All bits which are affected by this operation are set to 0.
        """

__all__ = ['RasterOperation']

