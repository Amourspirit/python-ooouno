# coding: utf-8
#
# Copyright 2022 :Barry-Thomas-Paul: Moss
#
# Licensed under the Apache License, Version 2.0 (the "License")
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http: // www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# Struct Class
# this is a auto generated file generated by Cheetah
# Namespace: com.sun.star.sheet
# Libre Office Version: 7.2
import typing
if typing.TYPE_CHECKING:
    from ..util.color import Color as Color_68e908c5
from ooo_uno.oenv import UNO_ENVIRONMENT, UNO_RUNTIME
_DYNAMIC = False
if (not typing.TYPE_CHECKING) and UNO_RUNTIME and UNO_ENVIRONMENT:
    _DYNAMIC = True
    from ooo_uno.helper import uno_helper

if typing.TYPE_CHECKING or _DYNAMIC is False:


    class FilterFieldValue(object):
        """
        Struct Class

        
        **since**
        
            LibreOffice 3.5

        See Also:
            `API FilterFieldValue <https://api.libreoffice.org/docs/idl/ref/structcom_1_1sun_1_1star_1_1sheet_1_1FilterFieldValue.html>`_


        Note:
            | At runtime FilterFieldValue will be an actual uno struct however can seamlessly be treated as a regualr class.
            | At design time a class is presumed. This allows for better typings.
            | FilterFieldValue is a callable and can be treatead as a class and create instances.
        """

        def __init__(self, ColorValue: 'typing.Optional[Color_68e908c5]' = None, FilterType: typing.Optional[int] = None, IsNumeric: typing.Optional[bool] = None, NumericValue: typing.Optional[float] = None, StringValue: typing.Optional[str] = None):
            self._color_value = ColorValue
            self._filter_type = FilterType
            self._is_numeric = IsNumeric
            self._numeric_value = NumericValue
            self._string_value = StringValue

        @property
        def ColorValue(self) -> 'Color_68e908c5':
            """
            The color which is used for filtering.
            
            **since**
            
                LibreOffice 7.2
            """
            return self._color_value
        
        @ColorValue.setter
        def ColorValue(self, value: 'Color_68e908c5') -> None:
            self._color_value = value

        @property
        def FilterType(self) -> int:
            """
            Which field should be used for filtering:
            
            **since**
            
                LibreOffice 7.2
            """
            return self._filter_type
        
        @FilterType.setter
        def FilterType(self, value: int) -> None:
            self._filter_type = value

        @property
        def IsNumeric(self) -> bool:
            """
            selects whether the TableFilterFieldValue.NumericValue or the TableFilterFieldValue.StringValue is used.
            """
            return self._is_numeric
        
        @IsNumeric.setter
        def IsNumeric(self, value: bool) -> None:
            self._is_numeric = value

        @property
        def NumericValue(self) -> float:
            """
            specifies a numeric value for the condition.
            """
            return self._numeric_value
        
        @NumericValue.setter
        def NumericValue(self, value: float) -> None:
            self._numeric_value = value

        @property
        def StringValue(self) -> str:
            """
            specifies a string value for the condition.
            """
            return self._string_value
        
        @StringValue.setter
        def StringValue(self, value: str) -> None:
            self._string_value = value

if not typing.TYPE_CHECKING and _DYNAMIC:
    def _dynamic_struct() -> None:
        # Dynamically create uno struct using uno
        global FilterFieldValue
        order = ('ColorValue', 'FilterType', 'IsNumeric', 'NumericValue', 'StringValue')

        def _struct_init(*args, **kwargs):
            struct = uno_helper.create_uno_struct('com.sun.star.sheet.FilterFieldValue')
            for i, arg in enumerate(args):
                if arg is None:
                    continue
                setattr(struct, order[i], arg)
            for k, v in kwargs.items():
                setattr(struct, k, v)
            return struct
        FilterFieldValue = _struct_init

    _dynamic_struct()

__all__ = ['FilterFieldValue']
