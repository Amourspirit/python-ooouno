# coding: utf-8
#
# Copyright 2023 :Barry-Thomas-Paul: Moss
#
# Licensed under the Apache License, Version 2.0 (the "License")
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http: // www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# Interface Class
# this is a auto generated file generated by Cheetah
# Libre Office Version: 7.4
# Namespace: com.sun.star.container
import typing
from abc import abstractmethod
from ..uno.x_interface import XInterface as XInterface_8f010a43
if typing.TYPE_CHECKING:
    from ..beans.named_value import NamedValue as NamedValue_a37a0af3
    from .x_enumeration import XEnumeration as XEnumeration_f2180daa

class XContainerQuery(XInterface_8f010a43):
    """
    supports simple query feature on a container
    
    This interface makes it possible to create sub sets of container items which serve specified search criterion.

    See Also:
        `API XContainerQuery <https://api.libreoffice.org/docs/idl/ref/interfacecom_1_1sun_1_1star_1_1container_1_1XContainerQuery.html>`_
    """
    __ooo_ns__: str = 'com.sun.star.container'
    __ooo_full_ns__: str = 'com.sun.star.container.XContainerQuery'
    __ooo_type_name__: str = 'interface'
    __pyunointerface__: str = 'com.sun.star.container.XContainerQuery'

    @abstractmethod
    def createSubSetEnumerationByProperties(self, Properties: 'typing.Tuple[NamedValue_a37a0af3, ...]') -> 'XEnumeration_f2180daa':
        """
        creates a sub set of container items which supports searched properties as minimum
        
        It's not possible to use special commands or search specific parameters here. You can match by properties only. Enumerated elements must provide queried properties as minimum. Not specified properties will not be used for searching.
        """
        ...
    @abstractmethod
    def createSubSetEnumerationByQuery(self, Query: str) -> 'XEnumeration_f2180daa':
        """
        creates a sub set of container items which match given query command
        
        Items of this sub set must match used query string. Format of query depends from real implementation. Using of \"param=value\" pairs isn't necessary. So it's possible to combine different parameters as one simple command string.
        """
        ...

__all__ = ['XContainerQuery']

