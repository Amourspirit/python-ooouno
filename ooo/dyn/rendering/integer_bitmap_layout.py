# coding: utf-8
#
# Copyright 2022 :Barry-Thomas-Paul: Moss
#
# Licensed under the Apache License, Version 2.0 (the "License")
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http: // www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# Struct Class
# this is a auto generated file generated by Cheetah
# Namespace: com.sun.star.rendering
# Libre Office Version: 7.2
from typing import TYPE_CHECKING
from ooo.oenv import UNO_ENVIRONMENT, UNO_RUNTIME, UNO_NONE
if (not TYPE_CHECKING) and UNO_RUNTIME and UNO_ENVIRONMENT:
    import uno
 
    def _get_class():
        orig_init = None
        def init(self, ScanLines = UNO_NONE, ScanLineBytes = UNO_NONE, ScanLineStride = UNO_NONE, PlaneStride = UNO_NONE, ColorSpace = UNO_NONE, Palette = UNO_NONE, IsMsbFirst = UNO_NONE):
            if getattr(ScanLines, "__class__", None) == self.__class__:
                orig_init(self, ScanLines)
                return
            else:
                orig_init(self)
            if not ScanLines is UNO_NONE:
                if getattr(self, 'ScanLines') != ScanLines:
                    setattr(self, 'ScanLines', ScanLines)
            if not ScanLineBytes is UNO_NONE:
                if getattr(self, 'ScanLineBytes') != ScanLineBytes:
                    setattr(self, 'ScanLineBytes', ScanLineBytes)
            if not ScanLineStride is UNO_NONE:
                if getattr(self, 'ScanLineStride') != ScanLineStride:
                    setattr(self, 'ScanLineStride', ScanLineStride)
            if not PlaneStride is UNO_NONE:
                if getattr(self, 'PlaneStride') != PlaneStride:
                    setattr(self, 'PlaneStride', PlaneStride)
            if not ColorSpace is UNO_NONE:
                if getattr(self, 'ColorSpace') != ColorSpace:
                    setattr(self, 'ColorSpace', ColorSpace)
            if not Palette is UNO_NONE:
                if getattr(self, 'Palette') != Palette:
                    setattr(self, 'Palette', Palette)
            if not IsMsbFirst is UNO_NONE:
                if getattr(self, 'IsMsbFirst') != IsMsbFirst:
                    setattr(self, 'IsMsbFirst', IsMsbFirst)

        type_name = 'com.sun.star.rendering.IntegerBitmapLayout'
        struct = uno.getClass(type_name)
        struct.__ooo_ns__ = 'com.sun.star.rendering'
        struct.__ooo_full_ns__= type_name
        struct.__ooo_type_name__ = 'struct'
        orig_init = struct.__init__
        struct.__init__ = init
        return struct

    IntegerBitmapLayout = _get_class()


else:
    from ...lo.rendering.integer_bitmap_layout import IntegerBitmapLayout as IntegerBitmapLayout

__all__ = ['IntegerBitmapLayout']

