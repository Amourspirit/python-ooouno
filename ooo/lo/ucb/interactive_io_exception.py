# coding: utf-8
#
# Copyright 2022 :Barry-Thomas-Paul: Moss
#
# Licensed under the Apache License, Version 2.0 (the "License")
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http: // www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# Exception Class
# this is a auto generated file generated by Cheetah
# Namespace: com.sun.star.ucb
# Libre Office Version: 7.2
from ooo.oenv import UNO_NONE
import typing
from ..task.classified_interaction_request import ClassifiedInteractionRequest as ClassifiedInteractionRequest_9f72121b
from .io_error_code import IOErrorCode as IOErrorCode_96ab0a5f

class InteractiveIOException(ClassifiedInteractionRequest_9f72121b):
    """
    An input/output error.

    See Also:
        `API InteractiveIOException <https://api.libreoffice.org/docs/idl/ref/exceptioncom_1_1sun_1_1star_1_1ucb_1_1InteractiveIOException.html>`_
    """

    __ooo_ns__: str = 'com.sun.star.ucb'
    __ooo_full_ns__: str = 'com.sun.star.ucb.InteractiveIOException'
    __ooo_type_name__: str = 'exception'
    __pyunointerface__: str = 'com.sun.star.ucb.InteractiveIOException'
    __pyunostruct__: str = 'com.sun.star.ucb.InteractiveIOException'

    typeName: str = 'com.sun.star.ucb.InteractiveIOException'
    """Literal Constant ``com.sun.star.ucb.InteractiveIOException``"""

    def __init__(self, Code: typing.Optional[IOErrorCode_96ab0a5f] = IOErrorCode_96ab0a5f.ABORT, **kwargs) -> None:
        """
        Constructor

        Keyword Arguments:
            Code (IOErrorCode, optional): Code value.

            Other ``*args`` and ``**kwargs`` are passed to parent class.
        """
        super().__init__(**kwargs)

        self._code = Code

    @property
    def Code(self) -> IOErrorCode_96ab0a5f:
        """
        The type of input/output error.
        """
        return self._code
    
    @Code.setter
    def Code(self, value: IOErrorCode_96ab0a5f) -> None:
        self._code = value


