# coding: utf-8
#
# Copyright 2022 :Barry-Thomas-Paul: Moss
#
# Licensed under the Apache License, Version 2.0 (the "License")
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http: // www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# Struct Class
# this is a auto generated file generated by Cheetah
# Namespace: com.sun.star.security
# Libre Office Version: 7.2
from typing import TYPE_CHECKING
from ooo.oenv import UNO_ENVIRONMENT, UNO_RUNTIME, UNO_NONE
if (not TYPE_CHECKING) and UNO_RUNTIME and UNO_ENVIRONMENT:
    import uno
 
    def _get_class():
        orig_init = None
        def init(self, Signer = UNO_NONE, SignatureDate = UNO_NONE, SignatureTime = UNO_NONE, SignatureIsValid = UNO_NONE, CertificateStatus = UNO_NONE, PartialDocumentSignature = UNO_NONE, SignatureLineId = UNO_NONE, ValidSignatureLineImage = UNO_NONE, InvalidSignatureLineImage = UNO_NONE):
            if getattr(Signer, "__class__", None) == self.__class__:
                orig_init(self, Signer)
                return
            else:
                orig_init(self)
            if not Signer is UNO_NONE:
                if getattr(self, 'Signer') != Signer:
                    setattr(self, 'Signer', Signer)
            if not SignatureDate is UNO_NONE:
                if getattr(self, 'SignatureDate') != SignatureDate:
                    setattr(self, 'SignatureDate', SignatureDate)
            if not SignatureTime is UNO_NONE:
                if getattr(self, 'SignatureTime') != SignatureTime:
                    setattr(self, 'SignatureTime', SignatureTime)
            if not SignatureIsValid is UNO_NONE:
                if getattr(self, 'SignatureIsValid') != SignatureIsValid:
                    setattr(self, 'SignatureIsValid', SignatureIsValid)
            if not CertificateStatus is UNO_NONE:
                if getattr(self, 'CertificateStatus') != CertificateStatus:
                    setattr(self, 'CertificateStatus', CertificateStatus)
            if not PartialDocumentSignature is UNO_NONE:
                if getattr(self, 'PartialDocumentSignature') != PartialDocumentSignature:
                    setattr(self, 'PartialDocumentSignature', PartialDocumentSignature)
            if not SignatureLineId is UNO_NONE:
                if getattr(self, 'SignatureLineId') != SignatureLineId:
                    setattr(self, 'SignatureLineId', SignatureLineId)
            if not ValidSignatureLineImage is UNO_NONE:
                if getattr(self, 'ValidSignatureLineImage') != ValidSignatureLineImage:
                    setattr(self, 'ValidSignatureLineImage', ValidSignatureLineImage)
            if not InvalidSignatureLineImage is UNO_NONE:
                if getattr(self, 'InvalidSignatureLineImage') != InvalidSignatureLineImage:
                    setattr(self, 'InvalidSignatureLineImage', InvalidSignatureLineImage)

        type_name = 'com.sun.star.security.DocumentSignatureInformation'
        struct = uno.getClass(type_name)
        struct.__ooo_ns__ = 'com.sun.star.security'
        struct.__ooo_full_ns__= type_name
        struct.__ooo_type_name__ = 'struct'
        orig_init = struct.__init__
        struct.__init__ = init
        return struct

    DocumentSignatureInformation = _get_class()


else:
    from ...lo.security.document_signature_information import DocumentSignatureInformation as DocumentSignatureInformation

__all__ = ['DocumentSignatureInformation']

