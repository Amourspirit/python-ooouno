# coding: utf-8
#
# Copyright 2022 :Barry-Thomas-Paul: Moss
#
# Licensed under the Apache License, Version 2.0 (the "License")
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http: // www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# Struct Class
# this is a auto generated file generated by Cheetah
# Namespace: com.sun.star.geometry
# Libre Office Version: 7.2
import typing
from ooo_uno.oenv import UNO_ENVIRONMENT, UNO_RUNTIME
_DYNAMIC = False
if (not typing.TYPE_CHECKING) and UNO_RUNTIME and UNO_ENVIRONMENT:
    _DYNAMIC = True
    from ooo_uno.helper import uno_helper

if typing.TYPE_CHECKING or _DYNAMIC is False:


    class IntegerPoint2D(object):
        """
        Struct Class

        This structure defines a two-dimensional point.
        
        This structure contains x and y integer-valued coordinates of a two-dimensional point.
        
        **since**
        
            OOo 2.0

        See Also:
            `API IntegerPoint2D <https://api.libreoffice.org/docs/idl/ref/structcom_1_1sun_1_1star_1_1geometry_1_1IntegerPoint2D.html>`_


        Note:
            | At runtime IntegerPoint2D will be an actual uno struct however can seamlessly be treated as a regualr class.
            | At design time a class is presumed. This allows for better typings.
            | IntegerPoint2D is a callable and can be treatead as a class and create instances.
        """

        def __init__(self, X: typing.Optional[int] = None, Y: typing.Optional[int] = None):
            self._x = X
            self._y = Y

        @property
        def X(self) -> int:
            """
            The x coordinate of the point.
            """
            return self._x
        
        @X.setter
        def X(self, value: int) -> None:
            self._x = value

        @property
        def Y(self) -> int:
            """
            The x coordinate of the point.
            """
            return self._y
        
        @Y.setter
        def Y(self, value: int) -> None:
            self._y = value

if not typing.TYPE_CHECKING and _DYNAMIC:
    def _dynamic_struct() -> None:
        # Dynamically create uno struct using uno
        global IntegerPoint2D
        order = ('X', 'Y')

        def _struct_init(*args, **kwargs):
            struct = uno_helper.create_uno_struct('com.sun.star.geometry.IntegerPoint2D')
            for i, arg in enumerate(args):
                if arg is None:
                    continue
                setattr(struct, order[i], arg)
            for k, v in kwargs.items():
                setattr(struct, k, v)
            return struct
        IntegerPoint2D = _struct_init

    _dynamic_struct()

__all__ = ['IntegerPoint2D']
