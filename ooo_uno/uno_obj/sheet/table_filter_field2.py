# coding: utf-8
#
# Copyright 2022 :Barry-Thomas-Paul: Moss
#
# Licensed under the Apache License, Version 2.0 (the "License")
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http: // www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# Struct Class
# this is a auto generated file generated by Cheetah
# Namespace: com.sun.star.sheet
# Libre Office Version: 7.2
import os
import typing
if typing.TYPE_CHECKING:
    from .filter_connection import FilterConnection as FilterConnection_f01f0d97
from ooo_uno.oenv import UNO_ENVIRONMENT
if (not typing.TYPE_CHECKING) and UNO_ENVIRONMENT:
    from ooo_uno.helper import uno_helper


class TableFilterField2(object):
    """
    Struct Class

    describes a single condition in a filter descriptor.
    
    This struct has the FilterOperator2 constants group as member, whereas the TableFilterField struct uses the FilterOperator enum.
    
    **since**
    
        OOo 3.2

    See Also:
        `API TableFilterField2 <https://api.libreoffice.org/docs/idl/ref/structcom_1_1sun_1_1star_1_1sheet_1_1TableFilterField2.html>`_


    Note:
        | At runtime TableFilterField2 will be an actual uno struct however can seamlessly be treated as a regualr class.
        | At design time a class is presumed. This allows for better typings.
        | TableFilterField2 is a callable and can be treatead as a class and create instances.
    """

    def __init__(self, Connection: 'typing.Optional[FilterConnection_f01f0d97]' = None, Field: typing.Optional[int] = None, IsNumeric: typing.Optional[bool] = None, NumericValue: typing.Optional[float] = None, Operator: typing.Optional[int] = None, StringValue: typing.Optional[str] = None):
        self._connection = Connection
        self._field = Field
        self._is_numeric = IsNumeric
        self._numeric_value = NumericValue
        self._operator = Operator
        self._string_value = StringValue

    @property
    def Connection(self) -> 'FilterConnection_f01f0d97':
        """
        specifies how the condition is connected to the previous condition.
        """
        return self._connection
    
    @Connection.setter
    def Connection(self, value: 'FilterConnection_f01f0d97') -> None:
        self._connection = value

    @property
    def Field(self) -> int:
        """
        specifies which field (column) is used for the condition.
        """
        return self._field
    
    @Field.setter
    def Field(self, value: int) -> None:
        self._field = value

    @property
    def IsNumeric(self) -> bool:
        """
        selects whether the TableFilterField2.NumericValue or the TableFilterField2.StringValue is used.
        """
        return self._is_numeric
    
    @IsNumeric.setter
    def IsNumeric(self, value: bool) -> None:
        self._is_numeric = value

    @property
    def NumericValue(self) -> float:
        """
        specifies a numeric value for the condition.
        """
        return self._numeric_value
    
    @NumericValue.setter
    def NumericValue(self, value: float) -> None:
        self._numeric_value = value

    @property
    def Operator(self) -> int:
        """
        specifies the type of the condition as defined in FilterOperator2.
        """
        return self._operator
    
    @Operator.setter
    def Operator(self, value: int) -> None:
        self._operator = value

    @property
    def StringValue(self) -> str:
        """
        specifies a string value for the condition.
        """
        return self._string_value
    
    @StringValue.setter
    def StringValue(self, value: str) -> None:
        self._string_value = value

def _dynamic_struct() -> None:
    # Dynamically create uno struct using uno
    global TableFilterField2
    ignore = os.environ.get('ooouno_ignore_runtime', 'False')
    if ignore == 'True':
        return
    if (not typing.TYPE_CHECKING) and UNO_ENVIRONMENT:
        order = ('Connection', 'Field', 'IsNumeric', 'NumericValue', 'Operator', 'StringValue')
        def _struct_init(*args, **kwargs):
            struct = uno_helper.create_uno_struct('com.sun.star.sheet.TableFilterField2')
            for i, arg in enumerate(args):
                if arg is None:
                    continue
                setattr(struct, order[i], arg)
            for k, v in kwargs.items():
                setattr(struct, k, v)
            return struct
        TableFilterField2 = _struct_init

if (not typing.TYPE_CHECKING) and UNO_ENVIRONMENT:
    _dynamic_struct()

__all__ = ['TableFilterField2']
