# coding: utf-8
#
# Copyright 2023 :Barry-Thomas-Paul: Moss
#
# Licensed under the Apache License, Version 2.0 (the "License")
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http: // www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# Enum Class
# this is a auto generated file generated by Cheetah
# Namespace: com.sun.star.chart
# Libre Office Version: 7.4
from __future__ import annotations
import uno
from typing import Any, TYPE_CHECKING
from ooo.oenv.env_const import UNO_ENVIRONMENT, UNO_RUNTIME

_DYNAMIC = False
if (not TYPE_CHECKING) and UNO_RUNTIME and UNO_ENVIRONMENT:
    _DYNAMIC = True

if not TYPE_CHECKING and _DYNAMIC:
    # document generators will most likely not see this.
    from ooo.helper.enum_helper import UnoEnumMeta
    class ChartLegendExpansion(metaclass=UnoEnumMeta, type_name="com.sun.star.chart.ChartLegendExpansion", name_space="com.sun.star.chart"):
        """Dynamically created class that represents ``com.sun.star.chart.ChartLegendExpansion`` Enum. Class loosely mimics Enum"""
        pass
else:
    if TYPE_CHECKING:
        from com.sun.star.chart.ChartLegendExpansion import BALANCED as CHART_LEGEND_EXPANSION_BALANCED
        from com.sun.star.chart.ChartLegendExpansion import CUSTOM as CHART_LEGEND_EXPANSION_CUSTOM
        from com.sun.star.chart.ChartLegendExpansion import HIGH as CHART_LEGEND_EXPANSION_HIGH
        from com.sun.star.chart.ChartLegendExpansion import WIDE as CHART_LEGEND_EXPANSION_WIDE

        class ChartLegendExpansion(uno.Enum):
            """
            Enum Class


            See Also:
                `API ChartLegendExpansion <https://api.libreoffice.org/docs/idl/ref/namespacecom_1_1sun_1_1star_1_1chart.html#ab1908f844354e32092fdec03c1b9b513>`_
            """

            def __init__(self, value: Any) -> None:
                super().__init__('com.sun.star.chart.ChartLegendExpansion', value)

            __ooo_ns__: str = 'com.sun.star.chart'
            __ooo_full_ns__: str = 'com.sun.star.chart.ChartLegendExpansion'
            __ooo_type_name__: str = 'enum'

            BALANCED = CHART_LEGEND_EXPANSION_BALANCED
            """
            The legend entries are arranged in a way that the aspect ratio of the resulting legend is as near to 1 as possible.
            """
            CUSTOM = CHART_LEGEND_EXPANSION_CUSTOM
            """
            The size of the legend is given explicitly.
            """
            HIGH = CHART_LEGEND_EXPANSION_HIGH
            """
            The legend entries are stacked in a single column if possible.

            If not enough space is available further columns are added.
            """
            WIDE = CHART_LEGEND_EXPANSION_WIDE
            """
            The legend entries are arranged in a single row if possible.

            If not enough space is available further rows are added.
            """
    else:
        # keep document generators happy
        from ...lo.chart.chart_legend_expansion import ChartLegendExpansion as ChartLegendExpansion


__all__ = ['ChartLegendExpansion']
