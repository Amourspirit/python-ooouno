# coding: utf-8
#
# Copyright 2022 :Barry-Thomas-Paul: Moss
#
# Licensed under the Apache License, Version 2.0 (the "License")
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http: // www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# Struct Class
# this is a auto generated file generated by Cheetah
# Namespace: com.sun.star.mozilla
# Libre Office Version: 7.2
from typing import TYPE_CHECKING
from ooo.oenv import UNO_ENVIRONMENT, UNO_RUNTIME, UNO_NONE
if (not TYPE_CHECKING) and UNO_RUNTIME and UNO_ENVIRONMENT:
    import uno
 
    def _get_class():
        orig_init = None
        def init(self, Image = UNO_NONE, ID = UNO_NONE, GroupID = UNO_NONE, PreItemID = UNO_NONE, ItemText = UNO_NONE, IsVisible = UNO_NONE, IsActive = UNO_NONE, IsCheckable = UNO_NONE, IsChecked = UNO_NONE):
            if getattr(Image, "__class__", None) == self.__class__:
                orig_init(self, Image)
                return
            else:
                orig_init(self)
            if not Image is UNO_NONE:
                if getattr(self, 'Image') != Image:
                    setattr(self, 'Image', Image)
            if not ID is UNO_NONE:
                if getattr(self, 'ID') != ID:
                    setattr(self, 'ID', ID)
            if not GroupID is UNO_NONE:
                if getattr(self, 'GroupID') != GroupID:
                    setattr(self, 'GroupID', GroupID)
            if not PreItemID is UNO_NONE:
                if getattr(self, 'PreItemID') != PreItemID:
                    setattr(self, 'PreItemID', PreItemID)
            if not ItemText is UNO_NONE:
                if getattr(self, 'ItemText') != ItemText:
                    setattr(self, 'ItemText', ItemText)
            if not IsVisible is UNO_NONE:
                if getattr(self, 'IsVisible') != IsVisible:
                    setattr(self, 'IsVisible', IsVisible)
            if not IsActive is UNO_NONE:
                if getattr(self, 'IsActive') != IsActive:
                    setattr(self, 'IsActive', IsActive)
            if not IsCheckable is UNO_NONE:
                if getattr(self, 'IsCheckable') != IsCheckable:
                    setattr(self, 'IsCheckable', IsCheckable)
            if not IsChecked is UNO_NONE:
                if getattr(self, 'IsChecked') != IsChecked:
                    setattr(self, 'IsChecked', IsChecked)

        type_name = 'com.sun.star.mozilla.MenuMultipleChange'
        struct = uno.getClass(type_name)
        struct.__ooo_ns__ = 'com.sun.star.mozilla'
        struct.__ooo_full_ns__= type_name
        struct.__ooo_type_name__ = 'struct'
        orig_init = struct.__init__
        struct.__init__ = init
        return struct

    MenuMultipleChange = _get_class()


else:
    from ...lo.mozilla.menu_multiple_change import MenuMultipleChange as MenuMultipleChange

__all__ = ['MenuMultipleChange']

