# coding: utf-8
#
# Copyright 2022 :Barry-Thomas-Paul: Moss
#
# Licensed under the Apache License, Version 2.0 (the "License")
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http: // www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# Enum Class
# this is a auto generated file generated by Cheetah
# Namespace: com.sun.star.text
# Libre Office Version: 7.2
from typing import TYPE_CHECKING
from enum import Enum
from ooo_uno.oenv import UNO_ENVIRONMENT, UNO_RUNTIME
_DYNAMIC = False
if (not TYPE_CHECKING) and UNO_RUNTIME and UNO_ENVIRONMENT:
    _DYNAMIC = True
    from ooo_uno.helper.enum_helper import uno_enum_class_new
    from com.sun.star.text.RubyAdjust import (BLOCK, CENTER, INDENT_BLOCK, LEFT, RIGHT)

if TYPE_CHECKING or _DYNAMIC is False:


    class RubyAdjust(Enum):
        """
        Enum Class

        

        See Also:
            `API RubyAdjust <https://api.libreoffice.org/docs/idl/ref/namespacecom_1_1sun_1_1star_1_1text.html#adf417fe4b45f486fe88af93ad0b59efb>`_
        """
        BLOCK = 'BLOCK'
        """
        adjusted to both borders / stretched
        """
        CENTER = 'CENTER'
        """
        the object is adjusted to the center.
        
        centric adjusted.
        """
        INDENT_BLOCK = 'INDENT_BLOCK'
        """
        adjusted to both borders except for a small indent on both sides
        """
        LEFT = 'LEFT'
        """
        the object is left adjusted.
        
        text flows to the left side of the object.
        
        adjusted to the left.
        """
        RIGHT = 'RIGHT'
        """
        the object is right adjusted.
        
        text flows to the right side of the object.
        
        adjusted to the right.
        """

if not TYPE_CHECKING and _DYNAMIC:
    def _dynamic_enum():
        # Dynamically create class that actually contains UNO enum instances
        global RubyAdjust
        _dict = {
            "BLOCK": BLOCK,
            "CENTER": CENTER,
            "INDENT_BLOCK": INDENT_BLOCK,
            "LEFT": LEFT,
            "RIGHT": RIGHT,
        }

        RubyAdjust = type('RubyAdjust', (object,), {
            '__doc__': 'class created dynamically. Class loosly mimics Enum',
            "__new__": uno_enum_class_new
        })
        for k, v in _dict.items():
            setattr(RubyAdjust, k, v)

    _dynamic_enum()

__all__ = ['RubyAdjust']

